{
  "openapi": "3.0.1",
  "info": {
    "title": "PostNL API",
    "description": "PostNL API description for send, track, checkout and delivery options",
    "version": "V2"
  },
  "servers": [
    {
      "url": "https://api-sandbox.postnl.nl",
      "description": "Non-Production server"
    },
    {
      "url": "https://api.postnl.nl",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "APIKeyHeader": []
    }
  ],
  "paths": {
    "/shipment/v2/status/barcode/{barcode}": {
      "get": {
        "tags": [
          "ShippingStatus"
        ],
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "summary": "Returns the statuses for a particular barcode",
        "description": "Request example:\n```\ncurl -X GET \"https://api-sandbox.postnl.nl/shipment/v2/status/barcode/3SDEVC172649258\" \\\n -H \"Accept: application/json\" \\\n -H \"apikey: APIKEY-HERE\" \\\n```\n",
        "operationId": "GetStatusByBarcode",
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "description": "Barcode of the shipment. This is a unique value.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "3SDEVC172649258"
            }
          },
          {
            "name": "detail",
            "in": "query",
            "description": "Option to include old statuses in the response",
            "schema": {
              "type": "boolean",
              "example": false,
              "default": false
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language of the returned shipment and status descriptions (default is Dutch).",
            "schema": {
              "type": "string",
              "example": "NL",
              "enum": [
                "NL",
                "EN",
                "CN",
                "DE",
                "FR"
              ]
            }
          },
          {
            "name": "maxDays",
            "in": "query",
            "description": "Limit the number of days that will be searched (decrease this amount for better performance).",
            "schema": {
              "type": "string",
              "example": "14"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shippingstatusResponse"
                },
                "examples": {
                  "Current status single shipment": {
                    "$ref": "#/components/examples/shippingstatusExampleResponseSingleShipmentCurrent"
                  },
                  "Complete status single shipment": {
                    "$ref": "#/components/examples/shippingstatusExampleResponseSingleShipmentComplete"
                  },
                  "Multicollo shipment": {
                    "$ref": "#/components/examples/shippingstatusExampleResponseMulticollo"
                  },
                  "No shipment found": {
                    "$ref": "#/components/examples/shippingstatusExampleResponseNoShipment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shippingstatusValidationFault"
                },
                "example": {
                  "fault": {
                    "faultstring": "no barcode supplied in path",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyGet"
                },
                "example": {
                  "message": "Only GET requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shippingstatusValidationFault"
                },
                "example": {
                  "fault": {
                    "faultstring": "no barcode supplied in path",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/v2/status/reference/{referenceId}": {
      "get": {
        "summary": "Get status information by customer reference",
        "description": "Request example:\n```\ncurl -X GET \"https://api-sandbox.postnl.nl/shipment/v2/status/reference?detail=true&language=NL&customerCode={{CustomerCode}}&customerNumber={{CustomerNumber}}&reference=REF98173245876329\" \\\n -H \"Accept: application/json\" \\\n -H \"apikey: APIKEY-HERE\" \n```\n",
        "operationId": "GetStatusByReference",
        "tags": [
          "ShippingStatus"
        ],
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Customer code as known at PostNL Pakketten",
            "required": true,
            "schema": {
              "type": "string",
              "example": "DEVC"
            }
          },
          {
            "name": "customerNumber",
            "in": "query",
            "description": "Customer number as known at PostNL Pakketten",
            "required": true,
            "schema": {
              "type": "string",
              "example": "11223344"
            }
          },
          {
            "name": "referenceId",
            "in": "path",
            "description": "The customer reference belonging to the shipment",
            "required": true,
            "schema": {
              "type": "string",
              "example": "REF-12345"
            }
          },
          {
            "name": "detail",
            "in": "query",
            "description": "Option to include old statuses in the response",
            "schema": {
              "type": "boolean",
              "example": false,
              "default": false
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language of the returned shipment and status descriptions (default is Dutch).",
            "schema": {
              "type": "string",
              "example": "NL",
              "enum": [
                "NL",
                "EN",
                "CN",
                "DE",
                "FR"
              ]
            }
          },
          {
            "name": "maxDays",
            "in": "query",
            "description": "Limit the number of days that will be searched (decrease this amount for better performance). By default this is 90 days in the past.",
            "schema": {
              "type": "string",
              "example": "14"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shippingstatusResponse"
                },
                "examples": {
                  "Current status single shipment": {
                    "$ref": "#/components/examples/shippingstatusExampleResponseSingleShipmentCurrent"
                  },
                  "Complete status single shipment": {
                    "$ref": "#/components/examples/shippingstatusExampleResponseSingleShipmentComplete"
                  },
                  "Multicollo shipment": {
                    "$ref": "#/components/examples/shippingstatusExampleResponseMulticollo"
                  },
                  "No shipment found": {
                    "$ref": "#/components/examples/shippingstatusExampleResponseNoShipment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shippingstatusValidationFault"
                },
                "example": {
                  "fault": {
                    "faultstring": "no barcode supplied in path",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyGet"
                },
                "example": {
                  "message": "Only GET requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shippingstatusValidationFault"
                },
                "example": {
                  "fault": {
                    "faultstring": "no barcode supplied in path",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/v2/status/signature/{barcode}": {
      "get": {
        "tags": [
          "ShippingStatus"
        ],
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "summary": "Returns the signature of a particular shipment",
        "description": "Request example:\n```\ncurl -X GET \"https://api-sandbox.postnl.nl/shipment/v2/status/signature/3SDEVC172649258\" \\\n -H \"Accept: application/json\" \\\n -H \"apikey: APIKEY-HERE\" \n```\n",
        "operationId": "GetShipmentSignature",
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "description": "Barcode of the shipment",
            "required": true,
            "schema": {
              "type": "string",
              "example": "3SDEVC172649258"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A signature",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shippingstatusResponseSignature"
                },
                "examples": {
                  "Signature found": {
                    "$ref": "#/components/examples/shippingstatusExampleResponseSignature"
                  },
                  "Signature not found": {
                    "$ref": "#/components/examples/shippingstatusExampleResponseNoSignature"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shippingstatusValidationFault"
                },
                "example": {
                  "fault": {
                    "faultstring": "no barcode supplied in path",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyGet"
                },
                "example": {
                  "message": "Only GET requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shippingstatusValidationFault"
                },
                "example": {
                  "fault": {
                    "faultstring": "no barcode supplied in path",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/v2/status/{customernumber}/updatedshipments": {
      "get": {
        "summary": "Returns the updated statuses for a particular customer number",
        "description": "Request example:\n```\ncurl -X GET \"https://api-sandbox.postnl.nl/shipment/v2/status/11223344/updatedshipments?period=2022-12-25T10:00:00&amp;period=2022-12-25T10:12:00\" \\\n -H \"Accept: application/json\" \\\n -H \"apikey: APIKEY-HERE\" \\\n```\n",
        "operationId": "GetUpdatedStatusByCustomerNumber",
        "tags": [
          "ShippingStatus"
        ],
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "customernumber",
            "in": "path",
            "description": "Your customer number",
            "required": true,
            "schema": {
              "type": "string",
              "example": "11223344"
            }
          },
          {
            "name": "period[0]",
            "in": "query",
            "description": "Optional array which defines a specific period in which to return updated shipments. For optimal results, schedule calls at a frequency between 5-15 minutes and align the requested period accordingly to ensure complete coverage of past updates. Shorter periods yield improved response times. The API accommodates a maximum requested period of 2 hours, granting access to shipment data up to 48 hours in the past. Please use the following format: YYYY-MM-DDTHH:MM:SS and repeat this variable to define the period (e.g. /updatedshipments?period=2022-11-07T12:00:00.000&period=2022-11-07T12:05:00.000).",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2022-11-07T12:00:00"
            }
          },
          {
            "name": "period[1]",
            "in": "query",
            "description": "Optional array which defines a specific period in which to return updated shipments. For optimal results, schedule calls at a frequency between 5-15 minutes and align the requested period accordingly to ensure complete coverage of past updates. Shorter periods yield improved response times. The API accommodates a maximum requested period of 2 hours, granting access to shipment data up to 48 hours in the past. Please use the following format: YYYY-MM-DDTHH:MM:SS and repeat this variable to define the period (e.g. /updatedshipments?period=2022-11-07T12:00:00.000&period=2022-11-07T12:05:00.000).",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2022-11-07T12:05:00"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shippingstatusResponseUpdatedShipments"
                },
                "examples": {
                  "Updates found": {
                    "$ref": "#/components/examples/shippingstatusExampleResponseUpdatedShipments"
                  },
                  "No updates found": {
                    "$ref": "#/components/examples/shippingstatusExampleResponseUpdatedShipmentsNoUpdates"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shippingstatusValidationFault"
                },
                "example": {
                  "fault": {
                    "faultstring": "no barcode supplied in path",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyGet"
                },
                "example": {
                  "message": "Only GET requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shippingstatusValidationFault"
                },
                "example": {
                  "fault": {
                    "faultstring": "no barcode supplied in path",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/v2/confirm": {
      "post": {
        "tags": [
          "Confirming"
        ],
        "summary": "Confirm a shipment to PostNL",
        "operationId": "ConfirmShipment",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/confirmingRequest"
              },
              "examples": {
                "Standard product request": {
                  "$ref": "#/components/examples/confirmingExampleRequestDefault"
                },
                "Evening delivery request": {
                  "$ref": "#/components/examples/confirmingExampleRequestEvening"
                },
                "International (non-EU) shipment request": {
                  "$ref": "#/components/examples/confirmingExampleRequestCustoms"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A confirmation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/confirmingResponse"
                },
                "example": {
                  "ResponseShipments": [
                    {
                      "Errors": [],
                      "Warnings": [
                        {
                          "Code": "1280103",
                          "Description": "Address is unknown"
                        }
                      ],
                      "Barcode": "3SDEVC281677095"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/confirmingResponse"
                },
                "example": {
                  "ResponseShipments": [
                    {
                      "Errors": [
                        {
                          "Code": "10302",
                          "Description": "Length of 3S type barcode must be between 13 and 15"
                        }
                      ],
                      "Warnings": [],
                      "Barcode": "3SDEVC281677095"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyGetPost"
                },
                "example": {
                  "message": "Only GET & POST requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "fault": {
                    "faultstring": "Unexpected token in object literal",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/v2_2/label": {
      "post": {
        "tags": [
          "Labelling",
          "Shipment"
        ],
        "summary": "Generate a label and confirmation",
        "operationId": "GenerateLabel",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "confirm",
            "in": "query",
            "description": "With the Confirm boolean in the request, you can determine if you want to confirm the shipment in the same call or not. If the Boolean variable is true the shipment will be preannounced. If this is set to false, then an additional Confirming API request needs to be made.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/labellingRequest"
              },
              "examples": {
                "Standard product request": {
                  "$ref": "#/components/examples/labellingExampleRequestDefault"
                },
                "Evening delivery request": {
                  "$ref": "#/components/examples/labellingExampleRequestEvening"
                },
                "International (non-EU) shipment request": {
                  "$ref": "#/components/examples/labellingExampleRequestCustoms"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A Label",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/labellingResponse"
                },
                "examples": {
                  "Standard response": {
                    "$ref": "#/components/examples/labellingExampleResponseStandard"
                  },
                  "Multi-label response": {
                    "$ref": "#/components/examples/labellingExampleResponseMultilabel"
                  },
                  "Merged response": {
                    "$ref": "#/components/examples/labellingExampleResponseMerged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/labellingResponseInvalid"
                },
                "example": {
                  "Errors": [
                    {
                      "Error": "Validation failed for shipment: 3SDEVC949511897",
                      "Code": "1280202",
                      "Description": "Incorrect address specified in address type Sender"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyPost"
                },
                "example": {
                  "message": "Only POST requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "fault": {
                    "faultstring": "Unexpected token in object literal",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/v1_1/barcode": {
      "get": {
        "tags": [
          "Barcode"
        ],
        "summary": "Generate a unique barcode",
        "operationId": "GenerateBarcode",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "description": "Request example:\n```\ncurl -X GET \"https://api-sandbox.postnl.nl/shipment/v1_1/barcode?CustomerCode=DEVC&amp;CustomerNumber=11223344&amp;Type=3S&amp;Serie=000000000-999999999&amp\" \\\n -H \"Accept: application/json\" \\\n -H \"apikey: APIKEY-HERE\" \n```\n",
        "parameters": [
          {
            "name": "CustomerCode",
            "in": "query",
            "description": "The customer code for which you want a barcode to be generated",
            "required": true,
            "schema": {
              "type": "string",
              "example": "DEVC"
            }
          },
          {
            "name": "CustomerNumber",
            "in": "query",
            "description": "The customer code for which you want a barcode to be generated",
            "required": true,
            "schema": {
              "type": "string",
              "example": "11223344"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "The barcode type that you want to be generated",
            "required": true,
            "schema": {
              "type": "string",
              "example": "3S",
              "enum": [
                "2S",
                "3S",
                "CC",
                "CP",
                "CD",
                "CF",
                "LA",
                "RI",
                "UE"
              ]
            }
          },
          {
            "name": "Serie",
            "in": "query",
            "description": "Barcode serie in the format '###000000-###000000', for example 100000-20000. The range must consist of a minimal difference of 100.000. It is allowed to add extra leading zeros at the beginning of the serie. See [Guidelines](https://developer.postnl.nl/docs/#/http/api-endpoints/send-track/barcode/guidelines) for more information.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 6,
              "maxLength": 9,
              "example": "100000000"
            }
          },
          {
            "name": "Range",
            "in": "query",
            "description": "Only used for International Mail and Packet products (PEPS) shipments (with type LA, RI, UE). Identifying the issuing postal administration's country (NL in this case).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A barcode",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/barcodeResponse"
                },
                "example": {
                  "Barcode": "3SDEVC903942795"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/barcodeResponseInvalid"
                },
                "example": {
                  "errors": [
                    {
                      "ErrorMsg": "Too many numbers in series",
                      "ErrorNumber": "8"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyGetPost"
                },
                "example": {
                  "message": "Only GET & POST requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "fault": {
                    "faultstring": "Unexpected token in object literal",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/v1/checkout": {
      "post": {
        "tags": [
          "Checkout"
        ],
        "summary": "Checkout",
        "operationId": "Checkout",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/checkoutRequest"
              },
              "examples": {
                "Delivery and pickup options": {
                  "$ref": "#/components/examples/checkoutExampleFull"
                },
                "Delivery options only": {
                  "$ref": "#/components/examples/checkoutExampleDelivery"
                },
                "Pickup options only": {
                  "$ref": "#/components/examples/checkoutExamplePickup"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkoutResponse"
                },
                "example": {
                  "DeliveryOptions": [
                    {
                      "DeliveryDate": "09-07-2019",
                      "Timeframe": [
                        {
                          "From": "18:00:00",
                          "To": "22:30:00",
                          "Options": [
                            "Daytime"
                          ],
                          "ShippingDate": "08-07-2019",
                          "Sustainability": {
                            "Code": "02",
                            "Description": "Sustainable option"
                          }
                        }
                      ]
                    }
                  ],
                  "PickupOptions": [
                    {
                      "PickupDate": "09-07-2019",
                      "ShippingDate": "08-07-2019",
                      "Option": "Pickup",
                      "Locations": [
                        {
                          "Address": {
                            "Street": "Siriusdreef",
                            "Zipcode": "2132WT",
                            "HouseNr": 42,
                            "HouseNrExt": "-60",
                            "Countrycode": "NL",
                            "CompanyName": "Pickup company BV"
                          },
                          "PickupTime": "15:00",
                          "OpeningHours": {
                            "Monday": {
                              "From": "08:30:00",
                              "To": "22:30:00"
                            },
                            "Tuesday": {
                              "From": "08:30:00",
                              "To": "22:30:00"
                            },
                            "Wednesday": {
                              "From": "08:30:00",
                              "To": "22:30:00"
                            },
                            "Thursday": {
                              "From": "08:30:00",
                              "To": "22:30:00"
                            },
                            "Friday": {
                              "From": "08:30:00",
                              "To": "22:30:00"
                            },
                            "Saturday": {
                              "From": "08:30:00",
                              "To": "22:30:00"
                            },
                            "Sunday": {
                              "From": "08:30:00",
                              "To": "22:30:00"
                            }
                          },
                          "Distance": 234,
                          "LocationCode": "8101163043",
                          "PartnerID": "PNPNL-01",
                          "Sustainability": {
                            "Code": "02",
                            "Description": "Sustainable option"
                          }
                        }
                      ]
                    }
                  ],
                  "Warnings": [
                    {
                      "DeliveryDate": "07-07-2019",
                      "Code": "5034",
                      "Description": "No delivery option found on date",
                      "Options": "Daytime"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequest"
                },
                "example": {
                  "Date": "2024-06-11T12:38:45.413Z",
                  "Error": {
                    "ErrorCode": "3000",
                    "ErrorDescription": "Request format is invalid"
                  },
                  "RequestId": "09fd61fe-0099-4349-b71d-dce5c2472be9"
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyPost"
                },
                "example": {
                  "message": "Only POST requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "fault": {
                    "faultstring": "Unexpected token in object literal",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/v2_2/calculate/date/delivery": {
      "get": {
        "tags": [
          "Deliverydate"
        ],
        "summary": "Calculate expected delivery date",
        "description": "Request example:\n```\ncurl -X GET \"https://api-sandbox.postnl.nl/shipment/v2_2/calculate/date/delivery?ShippingDate=29-05-2022+14%3A00%3A00&amp;ShippingDuration=1&amp;CutOffTime=17%3A00%3A00&amp;PostalCode=2132WT&amp;CountryCode=NL&amp;City=Hoofddorp&amp;Street=Siriusdreef&amp;HouseNumber=42&amp;HouseNrExt=A\" \\\n -H \"Accept: application/json\" \\\n -H \"apikey: APIKEY-HERE\" \n```\n",
        "operationId": "CalculateDeliveryDate",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ShippingDate",
            "in": "query",
            "description": "Date/time of preparing the shipment for sending. Format: dd-MM-yyyy hh:mm:ss",
            "required": true,
            "schema": {
              "pattern": "^[0-3]\\d-[0-1]\\d-[1-2]\\d{3}\\s[0-2]\\d:[0-5]\\d:[0-5]\\d$",
              "type": "string",
              "example": "29-05-2022 14:00:00"
            }
          },
          {
            "name": "ShippingDuration",
            "in": "query",
            "description": "The duration it takes for the shipment to be delivered to PostNL in days. A value of 1 means that the parcel will be delivered to PostNL on the same day as the date specified in ShippingDate. A value of 2 means the parcel will arrive at PostNL a day later etc.",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "CutOffTime",
            "in": "query",
            "description": "Default cutoff time",
            "required": true,
            "schema": {
              "pattern": "^[0-2]\\d:[0-5]\\d:[0-5]\\d$",
              "type": "string",
              "example": "17:00:00"
            }
          },
          {
            "name": "PostalCode",
            "in": "query",
            "description": "Zipcode of the destination address",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4}([A-Z]{2})?$",
              "type": "string",
              "example": "2132WT"
            }
          },
          {
            "name": "CountryCode",
            "in": "query",
            "required": true,
            "description": "The ISO2 destination country code",
            "schema": {
              "type": "string",
              "example": "NL",
              "enum": [
                "NL",
                "BE"
              ]
            }
          },
          {
            "name": "OriginCountryCode",
            "in": "query",
            "description": "The ISO2 origin country code",
            "schema": {
              "type": "string",
              "default": "NL",
              "enum": [
                "NL",
                "BE"
              ]
            }
          },
          {
            "name": "City",
            "in": "query",
            "description": "City of the destination address",
            "schema": {
              "type": "string",
              "example": "Hoofddorp"
            }
          },
          {
            "name": "Street",
            "in": "query",
            "description": "The street name of the destination address.",
            "schema": {
              "type": "string",
              "example": "Siriusdreef"
            }
          },
          {
            "name": "HouseNumber",
            "in": "query",
            "description": "The house number of the destination address",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 42
            }
          },
          {
            "name": "HouseNrExt",
            "in": "query",
            "description": "House number extension of the delivery address",
            "schema": {
              "type": "string",
              "example": "A"
            }
          },
          {
            "name": "Options",
            "in": "query",
            "required": true,
            "description": "The delivery options that you want to take into account when calculating the expected delivery date",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/deliverydateOption"
              }
            }
          },
          {
            "name": "CutOffTimeMonday",
            "in": "query",
            "description": "Overrides default cutoff time specified in the CutOffTime parameter for mondays specifically",
            "schema": {
              "pattern": "^[0-2]\\d:[0-5]\\d:[0-5]\\d$",
              "type": "string"
            }
          },
          {
            "name": "AvailableMonday",
            "in": "query",
            "description": "Specifies if you are available to ship to PostNL on mondays",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CutOffTimeTuesday",
            "in": "query",
            "description": "Overrides default cutoff time specified in the CutOffTime parameter for tuesdays specifically",
            "schema": {
              "pattern": "^[0-2]\\d:[0-5]\\d:[0-5]\\d$",
              "type": "string"
            }
          },
          {
            "name": "AvailableTuesday",
            "in": "query",
            "description": "Specifies if you are available to ship to PostNL on tuesdays",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CutOffTimeWednesday",
            "in": "query",
            "description": "Overrides default cutoff time specified in the CutOffTime parameter for wednesdays specifically",
            "schema": {
              "pattern": "^[0-2]\\d:[0-5]\\d:[0-5]\\d$",
              "type": "string"
            }
          },
          {
            "name": "AvailableWednesday",
            "in": "query",
            "description": "Specifies if you are available to ship to PostNL on wednesdays",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CutOffTimeThursday",
            "in": "query",
            "description": "Overrides default cutoff time specified in the CutOffTime parameter for thursdays specifically",
            "schema": {
              "pattern": "^[0-2]\\d:[0-5]\\d:[0-5]\\d$",
              "type": "string"
            }
          },
          {
            "name": "AvailableThursday",
            "in": "query",
            "description": "Specifies if you are available to ship to PostNL on thursdays",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CutOffTimeFriday",
            "in": "query",
            "description": "Overrides default cutoff time specified in the CutOffTime parameter for fridays specifically",
            "schema": {
              "pattern": "^[0-2]\\d:[0-5]\\d:[0-5]\\d$",
              "type": "string"
            }
          },
          {
            "name": "AvailableFriday",
            "in": "query",
            "description": "Specifies if you are available to ship to PostNL on fridays",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CutOffTimeSaturday",
            "in": "query",
            "description": "Overrides default cutoff time specified in the CutOffTime parameter for saturdays specifically",
            "schema": {
              "pattern": "^[0-2]\\d:[0-5]\\d:[0-5]\\d$",
              "type": "string"
            }
          },
          {
            "name": "AvailableSaturday",
            "in": "query",
            "description": "Specifies if you are available to ship to PostNL on saturdays",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CutOffTimeSunday",
            "in": "query",
            "description": "Overrides default cutoff time specified in the CutOffTime parameter for sundays specifically",
            "schema": {
              "pattern": "^[0-2]\\d:[0-5]\\d:[0-5]\\d$",
              "type": "string"
            }
          },
          {
            "name": "AvailableSunday",
            "in": "query",
            "description": "Specifies if you are available to ship to PostNL on sundays",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected earliest delivery date",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deliverydateDeliveryResponse"
                },
                "example": {
                  "DeliveryDate": "30-05-2022",
                  "Options": {
                    "string": "Daytime"
                  },
                  "Sustainability": {
                    "Code": "02",
                    "Description": "Sustainable option"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deliverydateInvalidResponse"
                },
                "example": {
                  "Date": "2024-06-17T10:00:50.371Z",
                  "Error": {
                    "ErrorCode": "3000",
                    "ErrorDescription": "Request format is invalid"
                  },
                  "RequestId": "09fd61fe-0099-4349-b71d-dce5c2472be9"
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyGetPost"
                },
                "example": {
                  "message": "Only GET & POST requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "fault": {
                    "faultstring": "Unexpected token in object literal",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/v2_2/calculate/date/shipping": {
      "get": {
        "tags": [
          "Deliverydate"
        ],
        "summary": "Calculate required shipping date",
        "description": "Request example:\n```\ncurl -X GET \"https://api-sandbox.postnl.nl/shipment/v2_2/calculate/date/shipping?DeliveryDate=30-05-2022&amp;ShippingDuration=1&amp;PostalCode=2132WT&amp;CountryCode=NL&amp;City=Hoofddorp&amp;Street=Siriusdreef&amp;HouseNumber=42&amp;HouseNrExt=A\" \\\n -H \"Accept: application/json\" \\\n -H \"apikey: APIKEY-HERE\" \\\n\n```\n",
        "operationId": "CalculateShippingDate",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "DeliveryDate",
            "in": "query",
            "description": "Date of the expected delivery (to the final destination) of the shipment.",
            "required": true,
            "schema": {
              "pattern": "^[0-3]\\d-[0-1]\\d-[1-2]\\d{3}$",
              "type": "string",
              "example": "30-05-2022"
            }
          },
          {
            "name": "ShippingDuration",
            "in": "query",
            "description": "The duration it takes for the shipment to be delivered to PostNL in days. A value of 1 means that the parcel will be delivered to PostNL on the same day as the date specified in ShippingDate. A value of 2 means the parcel will arrive at PostNL a day later etc.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "PostalCode",
            "in": "query",
            "description": "Zipcode of the address",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4}([A-Z]{2})?$",
              "type": "string",
              "example": "2132WT"
            }
          },
          {
            "name": "CountryCode",
            "in": "query",
            "description": "The ISO2 destination country code",
            "required": true,
            "schema": {
              "type": "string",
              "default": "NL",
              "enum": [
                "NL",
                "BE"
              ]
            }
          },
          {
            "name": "OriginCountryCode",
            "in": "query",
            "description": "The ISO2 country code of the origin country",
            "schema": {
              "type": "string",
              "default": "NL",
              "enum": [
                "NL",
                "BE"
              ]
            }
          },
          {
            "name": "City",
            "in": "query",
            "description": "City of the destination address",
            "schema": {
              "type": "string",
              "example": "Hoofddorp"
            }
          },
          {
            "name": "Street",
            "in": "query",
            "description": "The street name of the destination address",
            "schema": {
              "type": "string",
              "example": "Siriusdreef"
            }
          },
          {
            "name": "HouseNumber",
            "in": "query",
            "description": "The house number of the destination address",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 42
            }
          },
          {
            "name": "HouseNrExt",
            "in": "query",
            "description": "House number extension of the destination address",
            "schema": {
              "type": "string",
              "example": "A"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The calculated date that the parcel needs to be shipped to PostNL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deliverydateShippingResponse"
                },
                "example": {
                  "SentDate": "29-06-2022"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deliverydateInvalidResponse"
                },
                "example": {
                  "Date": "2024-06-17T10:00:50.371Z",
                  "Error": {
                    "ErrorCode": "3000",
                    "ErrorDescription": "Request format is invalid"
                  },
                  "RequestId": "09fd61fe-0099-4349-b71d-dce5c2472be9"
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyGetPost"
                },
                "example": {
                  "message": "Only GET & POST requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "fault": {
                    "faultstring": "Unexpected token in object literal",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/v2_1/locations/nearest": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Returns pickup locations nearest to the provided address.",
        "description": "Request example:\n```\ncurl -X GET \"https://api-sandbox.postnl.nl/shipment/v2_1/locations/nearest?CountryCode=NL&PostalCode=2132WT&City=Hoofddorp&Street=Siriusdreef&HouseNumber=42&HouseNumberExtension=-60&DeliveryDate=24-12-2022&OpeningTime=09%3A00%3A00\" \\\n -H \"Accept: application/json\" \\\n -H \"apikey: APIKEY-HERE\" \\\n```\n",
        "operationId": "GetPickupLocationsByAddress",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "CountryCode",
            "in": "query",
            "required": true,
            "description": "The country of the recipient's address",
            "schema": {
              "type": "string",
              "example": "NL",
              "enum": [
                "NL",
                "BE"
              ]
            }
          },
          {
            "name": "PostalCode",
            "in": "query",
            "description": "The zipcode of the recipient's address",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4}([A-Z]{2})?$",
              "type": "string",
              "example": "2132WT"
            }
          },
          {
            "name": "City",
            "in": "query",
            "description": "The city of the recipient's address",
            "schema": {
              "type": "string",
              "example": "Hoofddorp"
            }
          },
          {
            "name": "Street",
            "in": "query",
            "description": "The street name of the recipient's address",
            "schema": {
              "type": "string",
              "example": "Siriusdreef"
            }
          },
          {
            "name": "HouseNumber",
            "in": "query",
            "description": "The house number of the recipient's address",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 42
            }
          },
          {
            "name": "HouseNumberExtension",
            "in": "query",
            "description": "The house number extension of the recipient's address",
            "schema": {
              "type": "string",
              "example": "-60"
            }
          },
          {
            "name": "DeliveryDate",
            "in": "query",
            "description": "The date of the earliest delivery date at the pickup location. Format:  dd-MM-yyyy. Note: this date cannot be in the past, otherwise an error is returned. If not provided, the present day is used as a default",
            "schema": {
              "pattern": "^[0-3]\\d-[0-1]\\d-[1-2]\\d{3}$",
              "type": "string",
              "example": "24-12-2022"
            }
          },
          {
            "name": "OpeningTime",
            "in": "query",
            "description": "Opening time filter. Format: hh:mm:ss. This field will be used to filter out locations that are closed at the time provided. If no opening time is provided all locations will be returned regardless of their opening times.",
            "schema": {
              "pattern": "^[0-2]\\d:[0-5]\\d:[0-5]\\d$",
              "type": "string",
              "example": "09:00:00"
            }
          },
          {
            "name": "DeliveryOptions",
            "in": "query",
            "description": "The pickup location types for which locations should be filtered. By default all location types are returned (PG = Retail points and parcel lockers). This can be used to filter on only parcel lockers (PA) or specifically exclude parcel lockers from the response (PG_EX).",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/locationsDeliveryOption"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Locations nearest to the address provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/locationsResponseMultiple"
                },
                "example": {
                  "GetLocationsResult": {
                    "ResponseLocation": [
                      {
                        "Address": {
                          "City": "City6",
                          "Countrycode": "Countrycode2",
                          "HouseNr": 136,
                          "HouseNrExt": "HouseNrExt4",
                          "Remark": "Remark8"
                        },
                        "DeliveryOptions": {
                          "string": [
                            "string6",
                            "string7"
                          ]
                        },
                        "Distance": 244,
                        "Latitude": 103.5,
                        "LocationCode": 102
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequest"
                },
                "example": {
                  "Date": "2024-06-11T12:38:45.413Z",
                  "Error": {
                    "ErrorCode": "3000",
                    "ErrorDescription": "Request format is invalid"
                  },
                  "RequestId": "09fd61fe-0099-4349-b71d-dce5c2472be9"
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyGetPost"
                },
                "example": {
                  "message": "Only GET & POST requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "fault": {
                    "faultstring": "Unexpected token in object literal",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/v2_1/locations/nearest/geocode": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Returns pickup locations nearest to the provided coordinates.",
        "description": "Request example:\n```\ncurl -X GET \"https://api-sandbox.postnl.nl/shipment/v2_1/locations/nearest/geocode?Latitude=52.2864669620795&Longitude=4.68239055845954&CountryCode=NL&DeliveryDate=24-12-2022&OpeningTime=09%3A00%3A00\" \\\n -H \"Accept: application/json\" \\\n -H \"apikey: APIKEY-HERE\" \\\n```\n",
        "operationId": "GetPickupLocationsByCoordinates",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "Latitude",
            "in": "query",
            "description": "The latitude of the location",
            "required": true,
            "schema": {
              "type": "number",
              "example": 52.2864669620795
            }
          },
          {
            "name": "Longitude",
            "in": "query",
            "description": "The longitude of the location",
            "required": true,
            "schema": {
              "type": "number",
              "example": 4.68239055845954
            }
          },
          {
            "name": "CountryCode",
            "in": "query",
            "required": true,
            "description": "The coutry for which the coordinates are provided",
            "schema": {
              "type": "string",
              "example": "NL",
              "enum": [
                "NL",
                "BE"
              ]
            }
          },
          {
            "name": "DeliveryDate",
            "in": "query",
            "description": "The date of the earliest delivery date. Format:  dd-MM-yyyy. Note: this date cannot be in the past, otherwise an error is returned.",
            "schema": {
              "pattern": "^[0-3]\\d-[0-1]\\d-[1-2]\\d{3}$",
              "type": "string",
              "example": "24-12-2022"
            }
          },
          {
            "name": "OpeningTime",
            "in": "query",
            "description": "Opening time filter. Format: hh:mm:ss. This field will be used to filter out locations that are closed at the time provided.",
            "schema": {
              "pattern": "^[0-2]\\d:[0-5]\\d:[0-5]\\d$",
              "type": "string",
              "example": "09:00:00"
            }
          },
          {
            "name": "DeliveryOptions",
            "in": "query",
            "description": "The pickup location types for which locations should be filtered. By default all location types are returned (PG = Retail points and parcel lockers). This can be used to filter on only parcel lockers (PA) or specifically exclude parcel lockers from the response (PG_EX).",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/locationsDeliveryOption"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Locations nearest to the coordinates provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/locationsResponseMultiple"
                },
                "example": {
                  "GetLocationsResult": {
                    "ResponseLocation": [
                      {
                        "Address": {
                          "City": "City6",
                          "Countrycode": "Countrycode2",
                          "HouseNr": 136,
                          "HouseNrExt": "HouseNrExt4",
                          "Remark": "Remark8"
                        },
                        "DeliveryOptions": {
                          "string": [
                            "string6",
                            "string7"
                          ]
                        },
                        "Distance": 244,
                        "Latitude": 103.5,
                        "LocationCode": 102
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequest"
                },
                "example": {
                  "Date": "2024-06-11T12:38:45.413Z",
                  "Error": {
                    "ErrorCode": "3000",
                    "ErrorDescription": "Request format is invalid"
                  },
                  "RequestId": "09fd61fe-0099-4349-b71d-dce5c2472be9"
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyGetPost"
                },
                "example": {
                  "message": "Only GET & POST requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "fault": {
                    "faultstring": "Unexpected token in object literal",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/v2_1/locations/area": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Returns pickup locations within a provided area.",
        "description": "Request example:\n```\ncurl -X GET \"https://api-sandbox.postnl.nl/shipment/v2_1/locations/area?LatitudeNorth=52.156439&LongitudeWest=5.015643&LatitudeSouth=52.017473&LongitudeEast=5.065254&CountryCode=NL&DeliveryDate=24-12-2023&OpeningTime=09%3A00%3A00\" \\\n -H \"Accept: application/json\" \\\n -H \"apikey: APIKEY-HERE\" \\\n```\n",
        "operationId": "GetPickupLocationsWithinArea",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "LatitudeNorth",
            "in": "query",
            "description": "The northmost coordinates of the area",
            "required": true,
            "schema": {
              "type": "number",
              "example": 52.156439
            }
          },
          {
            "name": "LongitudeWest",
            "in": "query",
            "description": "The westmost coordinates of the area",
            "required": true,
            "schema": {
              "type": "number",
              "example": 5.015643
            }
          },
          {
            "name": "LatitudeSouth",
            "in": "query",
            "description": "The southmost coordinates of the area",
            "required": true,
            "schema": {
              "type": "number",
              "example": 52.017473
            }
          },
          {
            "name": "LongitudeEast",
            "in": "query",
            "description": "The eastmost coordinates of the area",
            "required": true,
            "schema": {
              "type": "number",
              "example": 5.065254
            }
          },
          {
            "name": "CountryCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "NL",
              "enum": [
                "NL",
                "BE"
              ]
            }
          },
          {
            "name": "DeliveryDate",
            "in": "query",
            "description": "The date of the earliest delivery date. Format:  dd-MM-yyyy. Note: this date cannot be in the past, otherwise an error is returned.",
            "schema": {
              "pattern": "^[0-3]\\d-[0-1]\\d-[1-2]\\d{3}$",
              "type": "string",
              "example": "24-12-2023"
            }
          },
          {
            "name": "OpeningTime",
            "in": "query",
            "description": "Opening time filter. Format: hh:mm:ss. This field will be used to filter out locations that are closed at the time provided.",
            "schema": {
              "pattern": "^[0-2]\\d:[0-5]\\d:[0-5]\\d$",
              "type": "string",
              "example": "09:00:00"
            }
          },
          {
            "name": "DeliveryOptions",
            "in": "query",
            "description": "The pickup location types for which locations should be filtered. By default all location types are returned (PG = Retail points and parcel lockers). This can be used to filter on only parcel lockers (PA) or specifically exclude parcel lockers from the response (PG_EX).",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/locationsDeliveryOption"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Locations nearest to the area provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/locationsResponseMultiple"
                },
                "example": {
                  "GetLocationsResult": {
                    "ResponseLocation": [
                      {
                        "Address": {
                          "City": "City6",
                          "Countrycode": "Countrycode2",
                          "HouseNr": 136,
                          "HouseNrExt": "HouseNrExt4",
                          "Remark": "Remark8"
                        },
                        "DeliveryOptions": {
                          "string": [
                            "string6",
                            "string7"
                          ]
                        },
                        "Distance": 244,
                        "Latitude": 103.5,
                        "LocationCode": 102
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequest"
                },
                "example": {
                  "Date": "2024-06-11T12:38:45.413Z",
                  "Error": {
                    "ErrorCode": "3000",
                    "ErrorDescription": "Request format is invalid"
                  },
                  "RequestId": "09fd61fe-0099-4349-b71d-dce5c2472be9"
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyGetPost"
                },
                "example": {
                  "message": "Only GET & POST requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "fault": {
                    "faultstring": "Unexpected token in object literal",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/v2_1/locations/lookup": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Returns a specific pickup location",
        "description": "Request example:\n```\ncurl -X GET \"https://api-sandbox.postnl.nl/shipment/v2_1/locations/lookup?LocationCode=216877\" \\\n -H \"Accept: application/json\" \\\n -H \"apikey: APIKEY-HERE\" \n```\n",
        "operationId": "GetPickupLocation",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "LocationCode",
            "in": "query",
            "description": "LocationCode information",
            "required": true,
            "schema": {
              "type": "string",
              "example": "216877"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/locationResponseSingle"
                },
                "example": {
                  "GetLocationsResult": {
                    "ResponseLocation": {
                      "Address": {
                        "City": "City6",
                        "Countrycode": "Countrycode2",
                        "HouseNr": 136,
                        "HouseNrExt": "HouseNrExt4",
                        "Remark": "Remark8"
                      },
                      "DeliveryOptions": {
                        "string": [
                          "string6",
                          "string7"
                        ]
                      },
                      "Distance": 244,
                      "Latitude": 103.5,
                      "LocationCode": 102
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequest"
                },
                "example": {
                  "Date": "2024-06-11T12:38:45.413Z",
                  "Error": {
                    "ErrorCode": "3000",
                    "ErrorDescription": "Request format is invalid"
                  },
                  "RequestId": "09fd61fe-0099-4349-b71d-dce5c2472be9"
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyGetPost"
                },
                "example": {
                  "message": "Only GET & POST requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "fault": {
                    "faultstring": "Unexpected token in object literal",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/checkout/v1/postalcodecheck": {
      "get": {
        "tags": [
          "Postalcode check"
        ],
        "summary": "Checkout postalcode check",
        "description": "Please note that this API is not available on the sandbox environment.\n\nRequest example:\n```\ncurl -X GET \"https://api.postnl.nl/shipment/checkout/v1/postalcodecheck?postalcode=3571ZZ&amp;housenumber=74&amp;housenumberaddition=bis\" \\\n -H \"Accept: application/json\" \\\n -H \"apikey: APIKEY-HERE\" \n```\n",
        "operationId": "CheckoutPostalcodeCheck",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "postalcode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "3571ZZ",
              "minLength": 6,
              "maxLength": 6
            }
          },
          {
            "name": "housenumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "74",
              "minLength": 1,
              "maxLength": 5
            }
          },
          {
            "name": "housenumberaddition",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "bis",
              "maxLength": 6
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postalcodeCheckResponse"
                },
                "examples": {
                  "Single address found": {
                    "$ref": "#/components/examples/cpcSuccessSingleAddress"
                  },
                  "Multiple addresses found": {
                    "$ref": "#/components/examples/cpcSuccessMultipleAddresses"
                  },
                  "No address found": {
                    "$ref": "#/components/examples/cpcSuccessNoAddress"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postalcodeCheckResponseInvalid"
                },
                "example": {
                  "errors": [
                    {
                      "status": "400",
                      "title": "Bad request",
                      "detail": "Input field 'housenumber' must be a number"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyGetPost"
                },
                "example": {
                  "message": "Only GET & POST requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "fault": {
                    "faultstring": "Unexpected token in object literal",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment/v2_1/calculate/timeframes": {
      "get": {
        "tags": [
          "Timeframes"
        ],
        "summary": "Retrieve expected delivery timeframes",
        "description": "Request example:\n```\ncurl -X GET \"https://api-sandbox.postnl.nl/shipment/v2_1/calculate/timeframes?AllowSundaySorting=false&StartDate=30-06-2022&EndDate=02-07-2022&CountryCode=NL&PostalCode=2132WT&HouseNumber=42&HouseNrExt=A&City=Hoofddorp&Street=Siriusdreef&Options=Daytime%2CEvening\" \\\n -H \"Accept: application/json\" \\\n -H \"apikey: APIKEY-HERE\" \\\n```\n",
        "operationId": "RetrieveDeliveryTimeframes",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "AllowSundaySorting",
            "in": "query",
            "description": "Whether or not the requesting party allows for Sunday sorting (which leads to delivery on Monday).",
            "required": true,
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Date of the beginning of the timeframe. Format: dd-MM-yyyy",
            "required": true,
            "schema": {
              "pattern": "^([0-3]\\d-[0-1]\\d-[1-2]\\d{3})$",
              "type": "string",
              "example": "30-06-2022"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Date of the enddate of the timeframe. Format:dd-MM-yyyy. Enddate may not be before StartDate.",
            "required": true,
            "schema": {
              "pattern": "^([0-3]\\d-[0-1]\\d-[1-2]\\d{3})$",
              "type": "string",
              "example": "02-07-2022"
            }
          },
          {
            "name": "CountryCode",
            "in": "query",
            "description": "The ISO2 country code of the delivery address",
            "required": true,
            "schema": {
              "type": "string",
              "example": "NL",
              "enum": [
                "NL",
                "BE"
              ]
            }
          },
          {
            "name": "PostalCode",
            "in": "query",
            "description": "Zipcode of the delivery address",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4}([A-Z]{2})?$",
              "type": "string",
              "example": "2132WT"
            }
          },
          {
            "name": "HouseNumber",
            "in": "query",
            "description": "The house number of the delivery address",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "HouseNrExt",
            "in": "query",
            "description": "House number extension of the delivery address",
            "schema": {
              "type": "string",
              "example": "A"
            }
          },
          {
            "name": "City",
            "in": "query",
            "description": "City of the delivery address",
            "schema": {
              "type": "string",
              "example": "Hoofddorp"
            }
          },
          {
            "name": "Street",
            "in": "query",
            "description": "The street name of the delivery address",
            "schema": {
              "type": "string",
              "example": "Siriusdreef"
            }
          },
          {
            "name": "Options",
            "in": "query",
            "description": "The delivery options for which expected timeframes should be calculated. At least one delivery option must be specified. Multiple values should be comma-separated.",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/timeframeOptions"
              },
              "example": [
                "Daytime",
                "Evening",
                "Sunday"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Calculated delivery timeframes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/timeframeResponse"
                },
                "example": {
                  "Timeframes": {
                    "Timeframe": [
                      {
                        "Date": "02-07-2022",
                        "Timeframes": {
                          "TimeframeTimeframe": [
                            {
                              "From": "12:30:00",
                              "Options": {
                                "string": "Daytime"
                              },
                              "To": "14:30:00",
                              "Sustainability": {
                                "Code": "02",
                                "Description": "Sustainable option"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "ReasonNoTimeframes": {
                    "ReasonNoTimeframe": [
                      {
                        "Code": "1",
                        "Date": "02-07-2022",
                        "Description": "Delivery date not allowed",
                        "Options": {
                          "string": "Evening"
                        },
                        "Sustainability": {
                          "Code": "02",
                          "Description": "Sustainable option"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequest"
                },
                "example": {
                  "Date": "2024-06-18T13:25:02.711Z",
                  "Error": {
                    "ErrorCode": "3000",
                    "ErrorDescription": "Request format is invalid"
                  },
                  "RequestId": "09fd61fe-0099-4349-b71d-dce5c2472be9"
                }
              }
            }
          },
          "401": {
            "description": "Invalid apikey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "message": "Failed to resolve API Key variable 'request.header.apikey'",
                  "http_status_code": 401
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedOnlyGetPost"
                },
                "example": {
                  "message": "Only GET & POST requests allowed",
                  "http_status_code": 405
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "example": {
                  "message": "Too many requests. Rate limit exceeded!",
                  "http_status_code": 429
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "fault": {
                    "faultstring": "Unexpected token in object literal",
                    "detail": {
                      "errorcode": "Validation Fault"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "name": "apikey",
        "in": "header"
      }
    },
    "schemas": {
      "shippingstatusResponse": {
        "type": "object",
        "properties": {
          "CompleteStatus": {
            "type": "object",
            "description": "The current status and old statuses of the shipment",
            "properties": {
              "Shipment": {
                "$ref": "#/components/schemas/completeStatusShipment"
              }
            }
          },
          "CurrentStatus": {
            "type": "object",
            "description": "The current status and old statuses of the shipment",
            "properties": {
              "Shipment": {
                "$ref": "#/components/schemas/currentStatusShipment"
              }
            }
          },
          "Warnings": {
            "description": "Possible warnings (see [Error Codes](https://developer.postnl.nl/docs/#/http/reference-data/error-codes) for possible values)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shippingstatusWarning"
            }
          }
        }
      },
      "currentStatusShipment": {
        "type": "object",
        "properties": {
          "MainBarcode": {
            "type": "string",
            "description": "The main barcode of the shipment",
            "example": "3SDEVC6659149"
          },
          "Barcode": {
            "type": "string",
            "description": "The barcode of the shipment",
            "example": "3SDEVC6659149"
          },
          "ShipmentAmount": {
            "type": "string",
            "description": "The amount of parcels in the multi-collo shipment",
            "example": "2"
          },
          "ShipmentCounter": {
            "type": "string",
            "description": "The sequence of this parcel in the multi-collo shipment",
            "example": "1"
          },
          "Customer": {
            "$ref": "#/components/schemas/shippingstatusCustomer"
          },
          "ProductCode": {
            "type": "string",
            "description": "The product code of the shipment",
            "example": "003085"
          },
          "ProductDescription": {
            "type": "string",
            "description": "The description of the product code",
            "example": "Standaard Zending"
          },
          "Reference": {
            "type": "string",
            "description": "The customer reference belonging to the shipment",
            "example": "REF-1234567"
          },
          "DeliveryDate": {
            "type": "string",
            "description": "The expected delivery date of the shipment",
            "example": "2016-04-20"
          },
          "Dimension": {
            "$ref": "#/components/schemas/shippingstatusDimension"
          },
          "Address": {
            "type": "array",
            "description": "A list of addresses belonging to the shipment",
            "items": {
              "$ref": "#/components/schemas/shippingstatusAddress"
            }
          },
          "ProductOptions": {
            "type": "array",
            "description": "A list of product options.",
            "items": {
              "$ref": "#/components/schemas/shippingstatusProductOptions"
            }
          },
          "Status": {
            "type": "object",
            "description": "The current status of the shipment (see the [Status codes](https://developer.postnl.nl/docs/#/http/reference-data/t-t-status-codes/event-codes) for possible values.",
            "properties": {
              "TimeStamp": {
                "type": "string",
                "description": "The status timestamp",
                "example": "07-11-2022 19:10:28"
              },
              "StatusCode": {
                "type": "string",
                "description": "The status code",
                "example": "1"
              },
              "StatusDescription": {
                "type": "string",
                "description": "The status description",
                "example": "Zending voorgemeld"
              },
              "PhaseCode": {
                "type": "string",
                "description": "The phase code",
                "example": "1"
              },
              "PhaseDescription": {
                "type": "string",
                "description": "The phase description",
                "example": "Collectie"
              }
            }
          }
        }
      },
      "completeStatusShipment": {
        "type": "object",
        "properties": {
          "MainBarcode": {
            "type": "string",
            "description": "The main barcode of the shipment",
            "example": "3SDEVC6659149"
          },
          "Barcode": {
            "type": "string",
            "description": "The barcode of the shipment",
            "example": "3SDEVC6659149"
          },
          "ShipmentAmount": {
            "type": "string",
            "description": "The amount of parcels in the multi-collo shipment",
            "example": "2"
          },
          "ShipmentCounter": {
            "type": "string",
            "description": "The sequence of this parcel in the multi-collo shipment",
            "example": "1"
          },
          "Customer": {
            "$ref": "#/components/schemas/shippingstatusCustomer"
          },
          "ProductCode": {
            "type": "string",
            "description": "The product code of the shipment",
            "example": "003085"
          },
          "ProductDescription": {
            "type": "string",
            "description": "The description of the product code",
            "example": "Standaard Zending"
          },
          "Reference": {
            "type": "string",
            "description": "The customer reference belonging to the shipment",
            "example": "REF-1234567"
          },
          "DeliveryDate": {
            "type": "string",
            "description": "The expected delivery date of the shipment",
            "example": "2016-04-20"
          },
          "Dimension": {
            "$ref": "#/components/schemas/shippingstatusDimension"
          },
          "Amount": {
            "$ref": "#/components/schemas/shippingstatusAmount"
          },
          "Address": {
            "type": "array",
            "description": "A list of addresses belonging to the shipment",
            "items": {
              "$ref": "#/components/schemas/shippingstatusAddress"
            }
          },
          "Event": {
            "type": "array",
            "description": "The events of the shipment. (see the [Event Codes](https://developer.postnl.nl/docs/#/http/reference-data/t-t-status-codes/event-codes) for possible values.",
            "items": {
              "type": "object",
              "properties": {
                "Code": {
                  "type": "string",
                  "description": "The event code",
                  "example": "A01"
                },
                "Description": {
                  "type": "string",
                  "description": "The event description",
                  "example": "Pakket is nog niet door PostNL ontvangen of verwerkt"
                },
                "DestinationLocationCode": {
                  "type": "string",
                  "description": "Location code of the destination",
                  "example": "888888"
                },
                "LocationCode": {
                  "type": "string",
                  "description": "The current location code",
                  "example": "156789"
                },
                "RouteCode": {
                  "type": "string",
                  "description": "The route code",
                  "example": "310"
                },
                "RouteNumber": {
                  "type": "string",
                  "description": "The route number",
                  "example": "310 Sittard Vrangendael"
                },
                "TimeStamp": {
                  "type": "string",
                  "description": "Timestamp of the event",
                  "example": "07-11-2022 19:10:28"
                }
              }
            }
          },
          "Expectation": {
            "type": "object",
            "description": "The expected delivery timeframe",
            "properties": {
              "ETAFrom": {
                "type": "string",
                "example": "2022-11-07T10:00:00",
                "description": "The start of the timeframe"
              },
              "ETATo": {
                "type": "string",
                "example": "2022-11-07T12:00:00",
                "description": "The end of the timeframe"
              }
            }
          },
          "ProductOptions": {
            "type": "array",
            "description": "A list of product options.",
            "items": {
              "$ref": "#/components/schemas/shippingstatusProductOptions"
            }
          },
          "Status": {
            "type": "object",
            "description": "The current status of the shipment (see the [Status codes](https://developer.postnl.nl/docs/#/http/reference-data/t-t-status-codes/event-codes) for possible values.",
            "properties": {
              "TimeStamp": {
                "type": "string",
                "description": "The status timestamp",
                "example": "07-11-2022 19:10:28"
              },
              "StatusCode": {
                "type": "string",
                "description": "The status code",
                "example": "1"
              },
              "StatusDescription": {
                "type": "string",
                "description": "The status description",
                "example": "Zending voorgemeld"
              },
              "PhaseCode": {
                "type": "string",
                "description": "The phase code",
                "example": "1"
              },
              "PhaseDescription": {
                "type": "string",
                "description": "The phase description",
                "example": "Collectie"
              }
            }
          },
          "OldStatus": {
            "type": "array",
            "description": "A list of previous status codes (see the [Status codes](https://developer.postnl.nl/docs/#/http/reference-data/t-t-status-codes/event-codes) for possible values.",
            "items": {
              "type": "object",
              "properties": {
                "TimeStamp": {
                  "type": "string",
                  "description": "The status timestamp",
                  "example": "07-11-2022 19:10:28"
                },
                "StatusCode": {
                  "type": "string",
                  "description": "The status code",
                  "example": "1"
                },
                "StatusDescription": {
                  "type": "string",
                  "description": "The status description",
                  "example": "Zending voorgemeld"
                },
                "PhaseCode": {
                  "type": "string",
                  "description": "The phase code",
                  "example": "1"
                },
                "PhaseDescription": {
                  "type": "string",
                  "description": "The phase description",
                  "example": "Collectie"
                }
              }
            }
          }
        }
      },
      "shippingstatusProductOptions": {
        "type": "object",
        "properties": {
          "ProductOption": {
            "$ref": "#/components/schemas/shippingstatusProductOption"
          }
        }
      },
      "shippingstatusProductOption": {
        "type": "object",
        "properties": {
          "OptionCode": {
            "type": "string",
            "description": "The product option code for this ProductOption.",
            "example": "6"
          },
          "CharacteristicCode": {
            "type": "string",
            "description": "The characteristic of the ProductOption.",
            "example": "118"
          }
        }
      },
      "shippingstatusAddress": {
        "type": "object",
        "properties": {
          "FirstName": {
            "type": "string",
            "description": "The first name",
            "example": "Peter"
          },
          "LastName": {
            "type": "string",
            "description": "The last name",
            "example": "de Ruiter"
          },
          "CompanyName": {
            "type": "string",
            "description": "The company name",
            "example": "PostNL"
          },
          "DepartmentName": {
            "type": "string",
            "description": "The department name",
            "example": "IT"
          },
          "CountryCode": {
            "type": "string",
            "description": "The ISO2 country code",
            "example": "NL"
          },
          "Zipcode": {
            "type": "string",
            "description": "The zipcode",
            "example": "2132WT"
          },
          "Region": {
            "type": "string",
            "description": "The region name",
            "example": "Noord-Holland"
          },
          "District": {
            "type": "string",
            "description": "The district name",
            "example": "Beukenhorst"
          },
          "City": {
            "type": "string",
            "description": "The city name",
            "example": "Hoofddorp"
          },
          "Street": {
            "type": "string",
            "description": "The street name",
            "example": "Siriusdreef"
          },
          "HouseNumber": {
            "type": "string",
            "description": "The house number",
            "example": "42"
          },
          "HouseNumberSuffix": {
            "type": "string",
            "description": "The house number suffix",
            "example": "-60"
          },
          "Building": {
            "type": "string",
            "description": "The building name",
            "example": "AA"
          },
          "Floor": {
            "type": "string",
            "description": "The floor of the building",
            "example": "4"
          },
          "Remark": {
            "type": "string",
            "description": "An additional remark",
            "example": "No doorbell"
          }
        }
      },
      "shippingstatusAmount": {
        "type": "object",
        "description": "The amounts belonging to the shipment",
        "properties": {
          "RemboursBedrag": {
            "type": "string",
            "description": "The cash-on-delivery (COD) amount",
            "example": "EUR1079.00"
          },
          "VerzekerdBedrag": {
            "type": "string",
            "description": "The insurance amount of the shipment",
            "example": "EUR500.00"
          }
        }
      },
      "shippingstatusDimension": {
        "type": "object",
        "properties": {
          "Weight": {
            "type": "string",
            "description": "The weight of the shipment",
            "example": "100"
          },
          "Height": {
            "type": "string",
            "description": "The height of the shipment",
            "example": "200"
          },
          "Length": {
            "type": "string",
            "description": "The length of the shipment",
            "example": "300"
          },
          "Width": {
            "type": "string",
            "description": "The width of the shipment",
            "example": "400"
          },
          "Volume": {
            "type": "string",
            "description": "The volume of the shipment",
            "example": "5000"
          }
        }
      },
      "shippingstatusCustomer": {
        "type": "object",
        "properties": {
          "CustomerCode": {
            "type": "string",
            "description": "The customer code of the shipment",
            "example": "DEVC"
          },
          "CustomerNumber": {
            "type": "string",
            "description": "The customer number of the shipment",
            "example": "11223344"
          },
          "Name": {
            "type": "string",
            "description": "The customer name",
            "example": "PostNL Parcels"
          }
        }
      },
      "shippingstatusResponseSignature": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "properties": {
              "Barcode": {
                "type": "string",
                "example": "3SDEVC317858754",
                "description": "The barcode of the shipment for which the signature is returned"
              },
              "SignatureDate": {
                "type": "string",
                "description": "The date of the signature",
                "example": "2022-11-07T19:28:16"
              },
              "SignatureImage": {
                "type": "string",
                "description": "The signature content; base64 encoded GIF format.",
                "example": "iVBORw0KGgoAAAANSUhEUgAAAogAAAGTCAYAAACrs[TRUNCATED]"
              }
            }
          },
          "Warnings": {
            "type": "object",
            "properties": {
              "Warning": {
                "$ref": "#/components/schemas/shippingstatusWarning"
              }
            }
          }
        }
      },
      "shippingstatusWarning": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string",
            "description": "Warning message",
            "example": "No signature found"
          },
          "Code": {
            "type": "string",
            "description": "Warning code",
            "example": "2"
          }
        }
      },
      "shippingstatusResponseUpdatedShipments": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "Barcode": {
              "type": "string",
              "example": "3SDEVC5672025",
              "description": "The barcode belonging to the status update"
            },
            "CreationDate": {
              "type": "string",
              "example": "2022-11-07T00:00:00",
              "description": "The date of the update"
            },
            "CustomerNumber": {
              "type": "string",
              "example": "11223344",
              "description": "The customer number"
            },
            "CustomerCode": {
              "type": "string",
              "example": "DEVC",
              "description": "The customer code"
            },
            "Status": {
              "$ref": "#/components/schemas/updatedShipmentStatus"
            }
          }
        }
      },
      "updatedShipmentStatus": {
        "type": "object",
        "description": "The status update. See [Status codes](https://developer.postnl.nl/docs/#/http/reference-data/error-codes) for possible values.",
        "properties": {
          "Timestamp": {
            "type": "string",
            "description": "The timestamp of the update",
            "example": "2022-11-07T12:36:41"
          },
          "StatusCode": {
            "type": "string",
            "description": "The status code",
            "example": "1"
          },
          "StatusDescription": {
            "type": "string",
            "description": "The status description",
            "example": "Zending voorgemeld"
          },
          "PhaseCode": {
            "type": "string",
            "description": "The phase code",
            "example": "1"
          },
          "PhaseDescription": {
            "type": "string",
            "description": "The phase description",
            "example": "Collectie"
          }
        }
      },
      "shippingstatusValidationFault": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "object",
            "properties": {
              "faultstring": {
                "type": "string",
                "example": "no barcode supplied in path"
              },
              "detail": {
                "type": "object",
                "properties": {
                  "errorcode": {
                    "type": "string",
                    "example": "Validation Fault"
                  }
                }
              }
            }
          }
        }
      },
      "MethodNotAllowedOnlyGet": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Only GET requests allowed"
          },
          "http_status_code": {
            "type": "number",
            "example": 405
          }
        }
      },
      "confirmingRequest": {
        "required": [
          "Customer",
          "Message",
          "Shipments"
        ],
        "type": "object",
        "properties": {
          "Customer": {
            "required": [
              "CustomerCode",
              "CustomerNumber"
            ],
            "type": "object",
            "properties": {
              "Address": {
                "$ref": "#/components/schemas/customerAddress"
              },
              "CollectionLocation": {
                "type": "string",
                "description": "Code of delivery location at PostNL Pakketten",
                "example": "123456",
                "minLength": 6,
                "maxLength": 6
              },
              "ContactPerson": {
                "type": "string",
                "description": "Name of customer contact person",
                "example": "Janssen"
              },
              "CustomerCode": {
                "type": "string",
                "description": "Customer code as known at PostNL Pakketten",
                "example": "DEVC",
                "minLength": 1,
                "maxLength": 6
              },
              "CustomerNumber": {
                "type": "string",
                "description": "Name of customer contact person",
                "example": "11223344",
                "minLength": 1,
                "maxLength": 8
              },
              "Email": {
                "type": "string",
                "description": "E-mail address of the customer. Mandatory for Non EU destinations.",
                "example": "email@company.com",
                "minLength": 0,
                "maxLength": 50
              },
              "Name": {
                "type": "string",
                "description": "Customer name",
                "example": "Janssen",
                "minLength": 0,
                "maxLength": 35
              }
            }
          },
          "Message": {
            "$ref": "#/components/schemas/confirmingMessage"
          },
          "Shipments": {
            "type": "array",
            "description": "List of 1 or more Shipments. At least 1 shipment is required.",
            "items": {
              "$ref": "#/components/schemas/confirmingShipment"
            }
          }
        }
      },
      "confirmingShipment": {
        "required": [
          "Addresses",
          "Barcode",
          "Dimension",
          "ProductCodeDelivery"
        ],
        "type": "object",
        "properties": {
          "Addresses": {
            "type": "array",
            "description": "List of 1 or more Address type elements. At least 1 address type is mandatory. See [Address types](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/address-types) for the available types.",
            "items": {
              "required": [
                "AddressType",
                "Countrycode"
              ],
              "type": "object",
              "properties": {
                "AddressType": {
                  "pattern": "^\\d{2}$",
                  "type": "string",
                  "description": "Type of the address. This is a code. You can find the possible values at [Address types](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/address-types)",
                  "default": "01"
                },
                "Area": {
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 35,
                  "description": "Area of the address",
                  "example": "Tuindorp-Oost"
                },
                "Buildingname": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "Building name of the address",
                  "example": "Gebouw 1"
                },
                "City": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "City of the address",
                  "example": "Utrecht"
                },
                "CompanyName": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "This field has a dependency with the field Name. One of both fields must be filled mandatory; using both fields is also allowed. Mandatory when AddressType is 09.",
                  "example": "Janssen B.V."
                },
                "Countrycode": {
                  "pattern": "^[A-Z]{2}$",
                  "type": "string",
                  "description": "The ISO2 country codes",
                  "example": "NL"
                },
                "Department": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "Send to specific department of a company",
                  "example": "Finance"
                },
                "Doorcode": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "Door code of address. Mandatory for some international shipments.",
                  "example": "3345"
                },
                "FirstName": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "Remark: please add FirstName and Name (lastname) of the receiver to improve the parcel tracking experience of your customer. ",
                  "example": "Henk"
                },
                "Floor": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "Send to specific floor of a company",
                  "example": "2nd floor"
                },
                "HouseNr": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "Mandatory for shipments to Benelux. Max. length is 5 characters (only for Benelux addresses). For Benelux addresses,this field should always be numeric.",
                  "example": "74"
                },
                "HouseNrExt": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "House number extension ",
                  "example": "A"
                },
                "Name": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "Last name of person. This field has a dependency with the field CompanyName. One of both fields must be filled mandatory; using both fields is also allowed. Remark: please add FirstName and Name (lastname) of the receiver to improve the parcel tracking experience of your customer. ",
                  "example": "de Graaff"
                },
                "Region": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "Region of the address. Mandatory for Non EU destinations where a region is applicable.",
                  "example": "Utrecht"
                },
                "Street": {
                  "minLength": 0,
                  "maxLength": 95,
                  "type": "string",
                  "description": "This field has a dependency with the field StreetHouseNrExt. One of both fields must be filled mandatory. Using both fields simultaneously is discouraged. ",
                  "example": "Molengraaffplantsoen"
                },
                "StreetHouseNrExt": {
                  "type": "string",
                  "description": "Combination of Street, HouseNr and HouseNrExt. Please see [Guidelines](https://developer.postnl.nl/docs/#/http/api-endpoints/send-track/confirming/guidelines) for the explanation.",
                  "example": null
                },
                "Zipcode": {
                  "minLength": 0,
                  "maxLength": 17,
                  "type": "string",
                  "description": "Zipcode of the address. Mandatory for shipments to Benelux. Max length (NL) 6 characters,(BE;LU) 4 numeric characters",
                  "example": "3571ZZ"
                }
              }
            }
          },
          "Amounts": {
            "type": "array",
            "description": "List of amount types. An amount represents a value of the shipment. Amount type 01 mandatory for COD-shipments, Amount type 02 mandatory for domestic insured shipments. Please see [Amount types](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/amount-types) for the available types.",
            "items": {
              "required": [
                "AmountType",
                "Value"
              ],
              "type": "object",
              "properties": {
                "AmountType": {
                  "pattern": "^\\d{2}$",
                  "type": "string",
                  "description": "Amount type. Please see [Amount types](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/amount-types) for the available types.",
                  "example": "01"
                },
                "AccountName": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "Name of bank account owner ",
                  "example": "C. de Ruiter"
                },
                "BIC": {
                  "minLength": 8,
                  "maxLength": 11,
                  "type": "string",
                  "description": "BIC number,optional for COD shipments (mandatory for bank account number other than originating in The Netherlands)",
                  "example": "RABONL2UXXX"
                },
                "Currency": {
                  "pattern": "^[A-Z]{3}$",
                  "type": "string",
                  "description": "Currency code. only EUR, GBP, USD and CNY are allowed.",
                  "example": "EUR"
                },
                "IBAN": {
                  "minLength": 15,
                  "maxLength": 31,
                  "type": "string",
                  "description": "IBAN bank account number,mandatory for COD shipments. Dutch IBAN numbers are 18 characters ",
                  "example": "NL00RABO0123456789"
                },
                "Reference": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "Personal payment reference",
                  "example": "1234-5678"
                },
                "TransactionNumber": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "Transaction number",
                  "example": "1234"
                },
                "Value": {
                  "minimum": 0,
                  "type": "number",
                  "format": "double",
                  "description": "Money value in EUR (unless value Currency is specified for another currency). Value format (N6.2): #####0.00 (2 digits behind decimal dot). Mandatory for COD, Insured products (with the exception of certain productcodes with a standard insured amount).",
                  "example": 20.35
                }
              }
            }
          },
          "Barcode": {
            "minLength": 11,
            "maxLength": 15,
            "type": "string",
            "description": "Barcode of the shipment. This is a unique value. Note: If you leave this attribute out of your request an unique barcode will be generated automatically.",
            "example": "3SDEVC201611214"
          },
          "CodingText": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Code used for logistic purposes (usually generated by the service itself and returned in the response). Please note that this must be provided when  using the Confirm API to confirm shipments where coding texts are required (e.g. letterbox parcels).",
            "example": "#2426A3A#03#0306#"
          },
          "CollectionTimeStampStart": {
            "pattern": "^([0-3]\\d-[01]\\d-[12]\\d{3}\\s+)[0-2]\\d:[0-5]\\d(:[0-5]\\d)$",
            "type": "string",
            "description": "Starting date/time of the collection of the shipment. Format: dd-MM-yyyy hh:mm:ss",
            "example": "04-12-2022 17:00:00"
          },
          "CollectionTimeStampEnd": {
            "pattern": "^([0-3]\\d-[01]\\d-[12]\\d{3}\\s+)[0-2]\\d:[0-5]\\d(:[0-5]\\d)$",
            "type": "string",
            "description": "Ending date/time of the collection of the shipment. Format: dd-MM-yyyy hh:mm:ss",
            "example": "04-12-2022 19:00:00"
          },
          "Contacts": {
            "type": "array",
            "description": "One or more ContactType elements belonging to a shipment. Mandatory in some cases. Please refer to the available [Contact types](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/contact-types) for the possible values.",
            "items": {
              "required": [
                "ContactType"
              ],
              "type": "object",
              "properties": {
                "ContactType": {
                  "pattern": "^\\d{2}$",
                  "type": "string",
                  "description": "Type of the contact. This is a code. Please refer to the available [Contact types](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/contact-types) for the possible values.",
                  "example": "01"
                },
                "Email": {
                  "minLength": 0,
                  "maxLength": 50,
                  "type": "string",
                  "description": "Email address of the contact. Mandatory in some cases. Either the Email or Telnr needs to be filled in for Non EU destinations. Please see [Guidelines](https://developer.postnl.nl/docs/#/http/api-endpoints/send-track/confirming/guidelines).",
                  "example": "receiver@email.com"
                },
                "SMSNr": {
                  "minLength": 10,
                  "maxLength": 17,
                  "type": "string",
                  "description": "Mobile phone number of the contact. Mandatory in some cases. Please see [Guidelines](https://developer.postnl.nl/docs/#/http/api-endpoints/send-track/confirming/guidelines).",
                  "example": "+31612345678"
                },
                "TelNr": {
                  "minLength": 10,
                  "maxLength": 17,
                  "type": "string",
                  "description": "Phone number of the contact. Either the Email or Telnr needs to be filled in for Non EU destinations. Preferably prefixed with “+” and the international dialling code.",
                  "example": "+31301234567"
                }
              }
            }
          },
          "Content": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Content of the shipment. Mandatory for Extra@Home shipments",
            "example": "Media player"
          },
          "CostCenter": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Cost center of the shipment. This value will appear on your invoice",
            "example": "SX-GT-66"
          },
          "CustomerOrderNumber": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Order number of the customer",
            "example": "8689242390"
          },
          "Customs": {
            "type": "array",
            "description": "The Customs type is mandatory for non-EU shipments and not allowed for any other shipment types.",
            "items": {
              "$ref": "#/components/schemas/confirmingCustom"
            }
          },
          "DeliveryAddress": {
            "pattern": "^\\d{2}$",
            "type": "string",
            "description": "Delivery address specification. This field is mandatory when AddressType on the Address is 09.",
            "example": "01"
          },
          "DeliveryDate": {
            "pattern": "^[0-3]\\d-[01]\\d-[12]\\d{3}\\s[0-2]\\d:[0-5]\\d:[0-5]\\d$",
            "type": "string",
            "description": "Mandatory when using Mailbox Parcels (for generation of the coding rule) and delivery options like Evening/Morning/Sameday delivery etc.",
            "example": "30-06-2016 12:00:00"
          },
          "Dimension": {
            "required": [
              "Weight"
            ],
            "type": "object",
            "description": "Note: Length, Width, Height values are about the order of the size and need to be filled in from the longest to the shortest value. For example: shipment's official height is 700mm, width 500mm, length 300mm. The longest side (highest value) of 700mm needs to be entered at Length. Width value becomes 500mm, Height value: 300mm (the lowest). Entering the dimensions in the wrong order may result in incorrect shipping labels and longer delivery times. The maximum dimensions can be found in your PostNL contract.",
            "properties": {
              "Height": {
                "minimum": 1,
                "type": "integer",
                "description": "The shortest side of the shipment in millimeters (mm).",
                "example": 300
              },
              "Length": {
                "minimum": 1,
                "type": "integer",
                "description": "The longest side of the shipment in millimeters (mm).",
                "example": 700
              },
              "Volume": {
                "minimum": 1,
                "type": "integer",
                "description": "Volume of the shipment in centimeters (cm3). Mandatory for E@H-products.",
                "example": 30000
              },
              "Weight": {
                "minimum": 1,
                "type": "integer",
                "description": "Weight of the shipment in grams. Approximate weight suffices",
                "example": 4300
              },
              "Width": {
                "minimum": 1,
                "type": "integer",
                "description": "The second longest side of the shipment in millimeters (mm).",
                "example": 500
              }
            }
          },
          "DownPartnerBarcode": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Barcode of the downstream network partner of PostNL Parcels. Madatory for requesting Parcels Non-EU combilabel product codes.",
            "example": "CD123456785NL"
          },
          "DownPartnerID": {
            "minLength": 0,
            "maxLength": 50,
            "type": "string",
            "description": "Identification of the downstream network partner of PostNL Pakketten."
          },
          "DownPartnerLocation": {
            "minLength": 0,
            "maxLength": 10,
            "type": "string",
            "description": "Identification of the location of the downstream network partner of PostNL Pakketten.",
            "example": "PNPNL-01"
          },
          "Groups": {
            "type": "array",
            "description": "List of 0 or more Group types with data, grouping multiple shipments together. Mandatory for multicollo shipments. Please see [Guidelines](https://developer.postnl.nl/docs/#/http/api-endpoints/send-track/confirming/guidelines) (Multiple shipments) for more information.",
            "items": {
              "required": [
                "GroupType",
                "MainBarcode"
              ],
              "type": "object",
              "properties": {
                "GroupType": {
                  "pattern": "^\\d{2}$",
                  "type": "string",
                  "description": "Group sort that determines the type of group that is indicated. This is a code. For possible values, please see [here](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/group-types)",
                  "example": "03"
                },
                "GroupSequence": {
                  "type": "integer",
                  "description": "Sequence number of the collo within the complete shipment (e.g. collo 2 of 4) Mandatory for multicollo shipments",
                  "example": 1
                },
                "GroupCount": {
                  "type": "integer",
                  "description": "Total number of colli in the shipment (in case of multicolli shipments) Mandatory for multicollo shipments",
                  "example": 2
                },
                "MainBarcode": {
                  "minLength": 11,
                  "maxLength": 15,
                  "type": "string",
                  "description": "Main barcode for the shipment (in case of multicolli shipments) Mandatory for multicollo shipments",
                  "example": "3SDEVC7239264"
                }
              }
            }
          },
          "HazardousMaterial": {
            "type": "array",
            "description": "Array of hazardous materials contained in the shipment",
            "items": {
              "type": "object",
              "required": [
                "ToxicSubstanceCode"
              ],
              "properties": {
                "ToxicSubstanceCode": {
                  "type": "string",
                  "description": "Toxic substance code as stated in the ADR agreement",
                  "example": "8"
                },
                "AdditionalToxicSubstanceCode": {
                  "type": "array",
                  "description": "Array of additional toxic substance codes as stated in the ADR agreement",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "1-11",
                    "28-4"
                  ]
                },
                "ADRPoints": {
                  "type": "string",
                  "description": "The amount of ADR points",
                  "example": "30"
                },
                "TunnelCode": {
                  "type": "string",
                  "description": "The code indicating for which category of tunnels passage is prohibited with these goods.",
                  "example": "(E)"
                },
                "PackagingGroupCode": {
                  "type": "string",
                  "description": "Code identifying the category of the packaging material.",
                  "example": "III"
                },
                "PackagingGroupDescription": {
                  "type": "string",
                  "description": "Description of the packaging material",
                  "example": "Jerrycan plastic"
                },
                "GrossWeight": {
                  "type": "string",
                  "description": "Gross weight of the goods in grams.",
                  "example": "30000"
                },
                "UNDGNumber": {
                  "type": "string",
                  "description": "The UNDG number",
                  "example": "UN 1760"
                },
                "TransportCategoryCode": {
                  "type": "string",
                  "description": "The transport category code",
                  "example": "3"
                },
                "ChemicalTechnicalDescription": {
                  "type": "string",
                  "description": "The chemical technical description of the goods.",
                  "example": "FOSFORZUUR"
                }
              }
            }
          },
          "ProductCodeCollect": {
            "type": "string",
            "description": "Deprecated. Collection product code of a shipment.",
            "example": "3153"
          },
          "ProductCodeDelivery": {
            "pattern": "^\\d{4,5}$",
            "type": "string",
            "description": "Product code of the shipment. See the [Products page](https://developer.postnl.nl/docs/#/http/reference-data/product-codes-dutch-domestic) for possible products.",
            "default": "3085"
          },
          "ProductOptions": {
            "type": "array",
            "description": "Product options for the shipment, mandatory for certain products, see the [Products page](https://developer.postnl.nl/docs/#/http/reference-data/product-codes-dutch-domestic).",
            "items": {
              "required": [
                "Characteristic",
                "Option"
              ],
              "type": "object",
              "properties": {
                "Characteristic": {
                  "pattern": "^\\d{3}$",
                  "type": "string",
                  "description": "The characteristic of the ProductOption. Mandatory for some products, please see the [Products page](https://developer.postnl.nl/docs/#/http/reference-data/product-codes-dutch-domestic)",
                  "default": "118"
                },
                "Option": {
                  "pattern": "^\\d{3}$",
                  "type": "string",
                  "description": "The product option code for this ProductOption. Mandatory for some products, please see the [Products page](https://developer.postnl.nl/docs/#/http/reference-data/product-codes-dutch-domestic)",
                  "default": "006"
                }
              }
            }
          },
          "ReceiverDateOfBirth": {
            "pattern": "^([0-3]\\d-[01]\\d-[12]\\d{3})$",
            "type": "string",
            "description": "Date of birth. Mandatory for Age check products",
            "example": "10-12-1980"
          },
          "Reference": {
            "type": "string",
            "description": "Your own reference of the shipment. Mandatory for Extra@Home shipments; for E@H this is used to create your order number, so this should be unique for each request.",
            "example": "REF-2016014567"
          },
          "ReferenceCollect": {
            "type": "string",
            "description": "Additional reference of the collect order of the shipment",
            "example": "REF-6659150"
          },
          "Remark": {
            "type": "string",
            "description": "Remark of the shipment.",
            "example": "Fragile"
          },
          "ReturnBarcode": {
            "type": "string",
            "description": "Return barcode of the shipment. PostNL will provide you with a separate customer code specifically for generating the returnBarcode. Mandatory for Label in the Box (return label) shipments.",
            "example": "3SDEVR7762162"
          },
          "ReturnReference": {
            "type": "string",
            "description": "Return reference of the shipment",
            "example": "REF-639265677788"
          },
          "TimeslotID": {
            "type": "string",
            "description": "Deprecated. ID of the chosen timeslot as returned by the timeslot webservice",
            "example": null
          }
        }
      },
      "customerAddress": {
        "required": [
          "AddressType",
          "City",
          "Countrycode"
        ],
        "type": "object",
        "properties": {
          "AddressType": {
            "pattern": "^02$",
            "type": "string",
            "description": "Address 02 is mandatory. It can either be placed in the Customer segment or in the Shipment segment. Note that if you put it in the Shipment segment, it should go into all Shipment segments.",
            "example": "02"
          },
          "Area": {
            "type": "string",
            "minLength": 0,
            "maxLength": 35,
            "description": "Area of the address",
            "example": "Beukenhorst"
          },
          "Buildingname": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Building name of the address",
            "example": "AA"
          },
          "City": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "City of the address",
            "example": "Hoofddorp"
          },
          "CompanyName": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "This field has a dependency with the field Name. One of both fields must be filled mandatory; using both fields is also allowed. Mandatory when AddressType is 09.",
            "example": "PostNL"
          },
          "Countrycode": {
            "pattern": "^[A-Z]{2}$",
            "type": "string",
            "description": "The ISO2 country codes",
            "example": "NL"
          },
          "Department": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Send to specific department of a company",
            "example": "IT"
          },
          "Doorcode": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Door code of address. Mandatory for some international shipments.",
            "example": "123"
          },
          "FirstName": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Remark: please add FirstName and Name (lastname) of the receiver to improve the parcel tracking experience of your customer. ",
            "example": "Peter"
          },
          "Floor": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Send to specific floor of a company",
            "example": "4th floor"
          },
          "HouseNr": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Mandatory for shipments to Benelux. Max. length is 5 characters (only for Benelux addresses). For Benelux addresses,this field should always be numeric.",
            "example": "42"
          },
          "HouseNrExt": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "House number extension ",
            "example": "bis"
          },
          "Name": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Last name of person. This field has a dependency with the field CompanyName. One of both fields must be filled mandatory; using both fields is also allowed. Remark: please add FirstName and Name (lastname) of the receiver to improve the parcel tracking experience of your customer. ",
            "example": "de Ruiter"
          },
          "Region": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Region of the address",
            "example": "Noord-Holland"
          },
          "Street": {
            "minLength": 0,
            "maxLength": 95,
            "type": "string",
            "description": "This field has a dependency with the field StreetHouseNrExt. One of both fields must be filled mandatory; using both fields simultaneously is discouraged. ",
            "example": "Siriusdreef"
          },
          "StreetHouseNrExt": {
            "type": "string",
            "description": "Combination of Street, HouseNr and HouseNrExt. Please see [Guidelines](https://developer.postnl.nl/docs/#/http/api-endpoints/send-track/confirming/guidelines) for the explanation.",
            "example": null
          },
          "Zipcode": {
            "minLength": 0,
            "maxLength": 17,
            "type": "string",
            "description": "Zipcode of the address. Mandatory for shipments to Benelux. Max length (NL) 6 characters,(BE;LU) 4 numeric characters",
            "example": "2132WT"
          }
        }
      },
      "confirmingMessage": {
        "required": [
          "MessageID",
          "MessageTimeStamp"
        ],
        "type": "object",
        "properties": {
          "MessageID": {
            "type": "string",
            "description": "ID of the message",
            "example": "1",
            "minLength": 1,
            "maxLength": 12
          },
          "MessageTimeStamp": {
            "pattern": "^[0-3]\\d-[01]\\d-[12]\\d{3}\\s[0-2]\\d:[0-5]\\d:[0-5]\\d$",
            "type": "string",
            "description": "Date/time of sending the message. Format: dd-mm-yyyy hh:mm:ss",
            "example": "29-06-2016 12:00:00"
          }
        }
      },
      "confirmingCustom": {
        "required": [
          "Content",
          "Currency",
          "ShipmentType"
        ],
        "type": "object",
        "properties": {
          "Certificate": {
            "type": "boolean",
            "description": "Fill in if applicable, for specific items a export certificate is obliged, as proof that the item complies to the sanity regulations, [more information](https://ondernemersplein.kvk.nl/fytosanitair-of-veterinair-exportcertificaat-aanvragen/). Mandatory for Parcel shipments in the category type Commercial Goods, Commercial Sample and Returned Goods (Certificate, Invoice or License; at least 1 out of 3 must be selected)",
            "example": true
          },
          "CertificateNr": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Mandatory when Certificate is true. ",
            "example": "CERT-1235986739"
          },
          "License": {
            "type": "boolean",
            "description": "Fill in if applicable. Mandatory for Parcel shipments in the category type Commercial Goods, Commercial Sample and Returned Goods (Certificate, Invoice or License; at least 1 out of 3 must be selected).",
            "example": true
          },
          "LicenseNr": {
            "type": "string",
            "description": "Mandatory when License is true.",
            "example": "LIC-9847397"
          },
          "Invoice": {
            "type": "boolean",
            "description": "Fill in the invoice number of the shipment. For a faster customs clearing process apply the invoice on the outside of the shipment. Mandatory for Parcel shipments in the category type Commercial Goods, Commercial Sample and Returned Goods (Certificate, Invoice or License; at least 1 out of 3 must be selected).",
            "example": true
          },
          "InvoiceNr": {
            "type": "string",
            "description": "Mandatory when Invoice is true",
            "example": "INV_0120330"
          },
          "HandleAsNonDeliverable": {
            "type": "boolean",
            "description": "Determines what to do when the shipment cannot be delivered the first time (if this is set to true,the shipment will be returned after the first failed attempt)",
            "example": false
          },
          "Currency": {
            "type": "string",
            "description": "Currency code. only EUR, GBP, USD and CNY are allowed.",
            "example": "EUR",
            "enum": [
              "EUR",
              "GBP",
              "USD",
              "CNY"
            ]
          },
          "ShipmentType": {
            "type": "string",
            "description": "Type of shipment, possible values: Gift, Documents, Commercial Goods, Commercial Sample, Returned Goods. Is used to fill in the checkbox on the customs form on the shipment label. ",
            "example": "Commercial Goods",
            "enum": [
              "Gift",
              "Documents",
              "Commercial Goods",
              "Commercial Sample",
              "Returned Goods"
            ]
          },
          "TrustedShipperID": {
            "minLength": 0,
            "maxLength": 50,
            "type": "string",
            "description": "Use only when available. This is the reference of the sender. Depending on the destination with this ID, EORI, IOSS, TAX, VAT, VOEC*, the customs process can be faster. Only fill in this customs reference number if the sender is registrated as Trusted Shipper in the country of destination.  *VOEC is a Norwegian VAT number.",
            "example": "NL862386524"
          },
          "ImporterReferenceCode": {
            "minLength": 0,
            "maxLength": 50,
            "type": "string",
            "description": "This is the reference of the recipient. Fill in a Tax Code or VAT number or Importer code. Depending on the destination with this reference the customs process can be faster. For example Brazil uses an TAXID number for natural persons, known as CPF. ",
            "example": "GB339713089011"
          },
          "TransactionCode": {
            "minLength": 0,
            "maxLength": 50,
            "type": "string",
            "description": "See the [Reference data](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/transaction-codes) for possible values.",
            "example": "11"
          },
          "TransactionDescription": {
            "minLength": 0,
            "maxLength": 50,
            "type": "string",
            "description": "Transaction description; see [here](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/transaction-codes) for common examples.",
            "example": "Sale of goods"
          },
          "Content": {
            "type": "array",
            "description": "The contents of the shipment. This section is mandatory (minimum once, maximum 5). Fill per unique item.",
            "items": {
              "$ref": "#/components/schemas/confirmingCustomContent"
            }
          }
        }
      },
      "confirmingCustomContent": {
        "required": [
          "Description",
          "Quantity",
          "Value",
          "Weight"
        ],
        "type": "object",
        "properties": {
          "Description": {
            "minLength": 1,
            "maxLength": 35,
            "type": "string",
            "description": "Description of goods",
            "example": "Powdered milk"
          },
          "Quantity": {
            "minimum": 1,
            "pattern": "^\\d+$",
            "type": "integer",
            "description": "Fill in the total of the item(s)",
            "example": 2
          },
          "Weight": {
            "pattern": "^\\d+$",
            "type": "integer",
            "description": "Net weight of goods in gram(gr)",
            "example": 2600
          },
          "Value": {
            "pattern": "^\\d+\\.\\d{2}$",
            "type": "number",
            "format": "double",
            "description": "Commercial (customs) value of goods. Fill in the value of the item(s). ",
            "example": 119.99
          },
          "HSTariffNr": {
            "minLength": 6,
            "maxLength": 10,
            "type": "string",
            "description": "Specify every item with the standard HS commodity code (6-8-10 digits HS-code), [more information](https://tarief.douane.nl/ite-tariff-public/#/home). Note: punctuation marks and symbols are not allowed.",
            "example": "100878"
          },
          "CountryOfOrigin": {
            "pattern": "^[A-Z]{2}$",
            "type": "string",
            "description": "Fill in the code of the country where the item was produced (ISO-code), [more information](https://www.iso.org/home.html)",
            "example": "NL"
          }
        }
      },
      "confirmingResponse": {
        "type": "object",
        "properties": {
          "ResponseShipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/confirmingResponseShipment"
            }
          }
        }
      },
      "confirmingResponseShipment": {
        "type": "object",
        "properties": {
          "Errors": {
            "type": "array",
            "description": "Possible errors. See the [Error Codes](https://developer.postnl.nl/docs/#/http/reference-data/error-codes) for possible values",
            "items": {
              "$ref": "#/components/schemas/confirmingError"
            }
          },
          "Warnings": {
            "type": "array",
            "description": "Possible warnings. See the [Error Codes](https://developer.postnl.nl/docs/#/http/reference-data/error-codes) for possible values",
            "items": {
              "type": "object",
              "properties": {
                "Code": {
                  "type": "string",
                  "description": "The Warning code",
                  "example": "1280203"
                },
                "Description": {
                  "type": "string",
                  "description": "The warning description",
                  "example": "Address is unknown"
                }
              }
            }
          },
          "Barcode": {
            "type": "string",
            "description": "The barcode used",
            "example": "3SDEVC281677095"
          }
        }
      },
      "confirmingError": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "The error code",
            "example": "10302"
          },
          "Description": {
            "type": "string",
            "description": "The error description",
            "example": "Length of 3S type barcode must be between 13 and 15"
          }
        }
      },
      "labellingRequest": {
        "required": [
          "Customer",
          "Message",
          "Shipments"
        ],
        "type": "object",
        "properties": {
          "Customer": {
            "$ref": "#/components/schemas/labellingCustomer"
          },
          "LabelSignature": {
            "type": "string",
            "format": "byte",
            "description": "GIF image of the signature (as a base64 encoded string) max size: 280x60 mm (1058x226 pixels). This can be used to automatically sign the customs forms. The value of this element can have a maximum size of 65536 characters. Note that the total request can have a maximum size of 200KB. Larger requests will not be accepted by the server for performance reasons. Requests that exceed this limit will not return a validation error,but a HTTP 404 error.",
            "example": null
          },
          "Message": {
            "$ref": "#/components/schemas/labellingCustomerMessage"
          },
          "Shipments": {
            "type": "array",
            "description": "List of 1 or more Shipments. At least 1 shipment is required.",
            "items": {
              "$ref": "#/components/schemas/labellingCustomerShipment"
            }
          }
        }
      },
      "labellingCustomer": {
        "required": [
          "CustomerCode",
          "CustomerNumber"
        ],
        "type": "object",
        "properties": {
          "Address": {
            "$ref": "#/components/schemas/labellingCustomerAddress"
          },
          "CollectionLocation": {
            "type": "string",
            "description": "Code of delivery location at PostNL Pakketten",
            "example": "123456",
            "minLength": 6,
            "maxLength": 6
          },
          "ContactPerson": {
            "type": "string",
            "description": "Name of customer contact person",
            "example": "Janssen"
          },
          "CustomerCode": {
            "type": "string",
            "description": "Customer code as known at PostNL Pakketten",
            "example": "DEVC",
            "minLength": 1,
            "maxLength": 6
          },
          "CustomerNumber": {
            "type": "string",
            "description": "Name of customer contact person",
            "example": "11223344",
            "minLength": 1,
            "maxLength": 8
          },
          "Email": {
            "type": "string",
            "description": "E-mail address of the customer ",
            "example": "email@company.com",
            "minLength": 0,
            "maxLength": 50
          },
          "Name": {
            "type": "string",
            "description": "Customer name",
            "example": "Janssen",
            "minLength": 0,
            "maxLength": 35
          }
        }
      },
      "labellingCustomerAddress": {
        "required": [
          "AddressType",
          "City",
          "Countrycode"
        ],
        "type": "object",
        "properties": {
          "AddressType": {
            "pattern": "^02$",
            "type": "string",
            "description": "Address 02 is mandatory. It can either be placed in the Customer segment or in the Shipment segment. Note that if you put it in the Shipment segment, it should go into all Shipment segments.",
            "example": "02"
          },
          "Area": {
            "type": "string",
            "minLength": 0,
            "maxLength": 35,
            "description": "Area of the address",
            "example": "Beukenhorst"
          },
          "Buildingname": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Building name of the address",
            "example": "AA"
          },
          "City": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "City of the address",
            "example": "Hoofddorp"
          },
          "CompanyName": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "This field has a dependency with the field Name. One of both fields must be filled mandatory; using both fields is also allowed. Mandatory when AddressType is 09.",
            "example": "PostNL"
          },
          "Countrycode": {
            "pattern": "^[A-Z]{2}$",
            "type": "string",
            "description": "The ISO2 country codes",
            "example": "NL"
          },
          "Department": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Send to specific department of a company",
            "example": "IT"
          },
          "Doorcode": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Door code of address. Mandatory for some international shipments.",
            "example": "123"
          },
          "FirstName": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Remark: please add FirstName and Name (lastname) of the receiver to improve the parcel tracking experience of your customer. ",
            "example": "Peter"
          },
          "Floor": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Send to specific floor of a company",
            "example": "4th floor"
          },
          "HouseNr": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Mandatory for shipments to Benelux. Max. length is 5 characters (only for Benelux addresses). For Benelux addresses,this field should always be numeric.",
            "example": "42"
          },
          "HouseNrExt": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "House number extension ",
            "example": "bis"
          },
          "Name": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Last name of person. This field has a dependency with the field CompanyName. One of both fields must be filled mandatory; using both fields is also allowed. Remark: please add FirstName and Name (lastname) of the receiver to improve the parcel tracking experience of your customer. ",
            "example": "de Ruiter"
          },
          "Region": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Region of the address",
            "example": "Noord-Holland"
          },
          "Street": {
            "minLength": 0,
            "maxLength": 95,
            "type": "string",
            "description": "This field has a dependency with the field StreetHouseNrExt. One of both fields must be filled mandatory; using both fields simultaneously is discouraged. ",
            "example": "Siriusdreef"
          },
          "StreetHouseNrExt": {
            "type": "string",
            "description": "Combination of Street, HouseNr and HouseNrExt. Please see [Guidelines](https://developer.postnl.nl/docs/#/http/api-endpoints/send-track/labelling/guidelines) for the explanation.",
            "example": null
          },
          "Zipcode": {
            "minLength": 0,
            "maxLength": 17,
            "type": "string",
            "description": "Zipcode of the address. Mandatory for shipments to Benelux. Max length (NL) 6 characters,(BE;LU) 4 numeric characters",
            "example": "2132WT"
          }
        }
      },
      "labellingCustomerMessage": {
        "required": [
          "MessageID",
          "MessageTimeStamp",
          "Printertype"
        ],
        "type": "object",
        "properties": {
          "MessageID": {
            "type": "string",
            "description": "ID of the message",
            "example": "1",
            "minLength": 1,
            "maxLength": 12
          },
          "MessageTimeStamp": {
            "pattern": "^[0-3]\\d-[01]\\d-[12]\\d{3}\\s[0-2]\\d:[0-5]\\d:[0-5]\\d$",
            "type": "string",
            "description": "Date/time of sending the message. Format: dd-mm-yyyy hh:mm:ss",
            "example": "29-06-2016 12:00:00"
          },
          "Printertype": {
            "type": "string",
            "description": "Printer type that will be used to process the label, e.g. Zebra printer or PDF See [Printer types](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/printer-types) for the available printer types.",
            "example": "GraphicFile|PDF"
          }
        }
      },
      "labellingCustomerShipment": {
        "required": [
          "Addresses",
          "Barcode",
          "Dimension",
          "ProductCodeDelivery"
        ],
        "type": "object",
        "properties": {
          "Addresses": {
            "type": "array",
            "description": "List of 1 or more Address type elements. At least 1 address type is mandatory. See [Address types](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/address-types) for the available types.",
            "items": {
              "$ref": "#/components/schemas/shipmentAddress"
            }
          },
          "Amounts": {
            "type": "array",
            "description": "List of amount types. An amount represents a value of the shipment. Amount type 01 mandatory for COD-shipments, Amount type 02 mandatory for domestic insured shipments. Please see [Amount types](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/amount-types) for the available types.",
            "items": {
              "required": [
                "AmountType",
                "Value"
              ],
              "type": "object",
              "properties": {
                "AmountType": {
                  "pattern": "^\\d{2}$",
                  "type": "string",
                  "description": "Amount type. Please see [Amount types](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/amount-types) for the available types.",
                  "example": "01"
                },
                "AccountName": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "Name of bank account owner ",
                  "example": "C. de Ruiter"
                },
                "BIC": {
                  "minLength": 8,
                  "maxLength": 11,
                  "type": "string",
                  "description": "BIC number,optional for COD shipments (mandatory for bank account number other than originating in The Netherlands)",
                  "example": "RABONL2UXXX"
                },
                "Currency": {
                  "pattern": "^[A-Z]{3}$",
                  "type": "string",
                  "description": "Currency code according ISO 4217. E.g. EUR",
                  "example": "EUR"
                },
                "IBAN": {
                  "minLength": 15,
                  "maxLength": 31,
                  "type": "string",
                  "description": "IBAN bank account number,mandatory for COD shipments. Dutch IBAN numbers are 18 characters ",
                  "example": "NL00RABO0123456789"
                },
                "Reference": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "Personal payment reference",
                  "example": "1234-5678"
                },
                "TransactionNumber": {
                  "minLength": 0,
                  "maxLength": 35,
                  "type": "string",
                  "description": "Transaction number",
                  "example": "1234"
                },
                "Value": {
                  "minimum": 0,
                  "type": "number",
                  "format": "double",
                  "description": "Money value in EUR (unless value Currency is specified for another currency). Value format (N6.2): #####0.00 (2 digits behind decimal dot). Mandatory for COD, Insured products (with the exception of certain productcodes with a standard insured amount).",
                  "example": 20.35
                }
              }
            }
          },
          "Barcode": {
            "minLength": 11,
            "maxLength": 15,
            "type": "string",
            "description": "Barcode of the shipment. This is a unique value. Note: If you leave this attribute out of your request an unique barcode will be generated automatically.",
            "example": "3SDEVC201611214"
          },
          "CodingText": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Code used for logistic purposes (usually generated by the service itself and returned in the response). Please note that this must be provided when  using the Confirm API to confirm shipments where coding texts are required (e.g. letterbox parcels).",
            "example": "#2426A3A#03#0306#"
          },
          "CollectionTimeStampStart": {
            "pattern": "^([0-3]\\d-[01]\\d-[12]\\d{3}\\s+)[0-2]\\d:[0-5]\\d(:[0-5]\\d)$",
            "type": "string",
            "description": "Starting date/time of the collection of the shipment. Format: dd-MM-yyyy hh:mm:ss",
            "example": "04-12-2022 17:00:00"
          },
          "CollectionTimeStampEnd": {
            "pattern": "^([0-3]\\d-[01]\\d-[12]\\d{3}\\s+)[0-2]\\d:[0-5]\\d(:[0-5]\\d)$",
            "type": "string",
            "description": "Ending date/time of the collection of the shipment. Format: dd-MM-yyyy hh:mm:ss",
            "example": "04-12-2022 19:00:00"
          },
          "Contacts": {
            "type": "array",
            "description": "One or more ContactType elements belonging to a shipment. Mandatory in some cases. Please refer to the available [Contact types](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/contact-types) for the possible values.",
            "items": {
              "required": [
                "ContactType"
              ],
              "type": "object",
              "properties": {
                "ContactType": {
                  "pattern": "^\\d{2}$",
                  "type": "string",
                  "description": "Type of the contact. This is a code. Please refer to the available [Contact types](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/contact-types) for the possible values.",
                  "example": "01"
                },
                "Email": {
                  "minLength": 0,
                  "maxLength": 50,
                  "type": "string",
                  "description": "Email address of the contact. Mandatory in some cases. Please see [Guidelines](https://developer.postnl.nl/docs/#/http/api-endpoints/send-track/labelling/guidelines).",
                  "example": "receiver@email.com"
                },
                "SMSNr": {
                  "minLength": 10,
                  "maxLength": 17,
                  "type": "string",
                  "description": "Mobile phone number of the contact. Mandatory in some cases. Please see [Guidelines](https://developer.postnl.nl/docs/#/http/api-endpoints/send-track/labelling/guidelines).",
                  "example": "+31612345678"
                },
                "TelNr": {
                  "minLength": 10,
                  "maxLength": 17,
                  "type": "string",
                  "description": "Phone number of the contact",
                  "example": "+31301234567"
                }
              }
            }
          },
          "Content": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Content of the shipment. Mandatory for Extra@Home shipments",
            "example": "Media player"
          },
          "CostCenter": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Cost center of the shipment. This value will appear on your invoice",
            "example": "SX-GT-66"
          },
          "CustomerOrderNumber": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Order number of the customer",
            "example": "8689242390"
          },
          "Customs": {
            "type": "object",
            "description": "The Customs type is mandatory for non-EU shipments and not allowed for any other shipment types.",
            "required": [
              "Content",
              "Currency",
              "ShipmentType"
            ],
            "properties": {
              "Certificate": {
                "type": "boolean",
                "description": "Fill in if applicable, for specific items a export certificate is obliged, as proof that the item complies to the sanity regulations, [more information](https://ondernemersplein.kvk.nl/fytosanitair-of-veterinair-exportcertificaat-aanvragen/). Mandatory for Parcel shipments in the category type Commercial Goods, Commercial Sample and Returned Goods (Certificate, Invoice or License; at least 1 out of 3 must be selected)",
                "example": true
              },
              "CertificateNr": {
                "minLength": 0,
                "maxLength": 35,
                "type": "string",
                "description": "Mandatory when Certificate is true. ",
                "example": "CERT-1235986739"
              },
              "License": {
                "type": "boolean",
                "description": "Fill in if applicable. Mandatory for Parcel shipments in the category type Commercial Goods, Commercial Sample and Returned Goods (Certificate, Invoice or License; at least 1 out of 3 must be selected).",
                "example": true
              },
              "LicenseNr": {
                "type": "string",
                "description": "Mandatory when License is true.",
                "example": "LIC-9847397"
              },
              "Invoice": {
                "type": "boolean",
                "description": "Fill in the invoice number of the shipment. For a faster customs clearing process apply the invoice on the outside of the shipment. Mandatory for Parcel shipments in the category type Commercial Goods, Commercial Sample and Returned Goods (Certificate, Invoice or License; at least 1 out of 3 must be selected).",
                "example": true
              },
              "InvoiceNr": {
                "type": "string",
                "description": "Mandatory when Invoice is true",
                "example": "INV_0120330"
              },
              "HandleAsNonDeliverable": {
                "type": "boolean",
                "description": "Determines what to do when the shipment cannot be delivered the first time (if this is set to true,the shipment will be returned after the first failed attempt)",
                "example": false
              },
              "Currency": {
                "type": "string",
                "description": "Currency code,only EUR and USS are allowed",
                "example": "EUR",
                "enum": [
                  "EUR",
                  "USS"
                ]
              },
              "ShipmentType": {
                "type": "string",
                "description": "Type of shipment,possible values: Gift,Documents,Commercial Goods,Commercial Sample,Returned Goods",
                "example": "Commercial Goods",
                "enum": [
                  "Gift",
                  "Documents",
                  "Commercial Goods",
                  "Commercial Sample",
                  "Returned Goods"
                ]
              },
              "TrustedShipperID": {
                "minLength": 0,
                "maxLength": 50,
                "type": "string",
                "description": "'Use only when available. Depending on the destination with this ID the customs process can be faster. Only fill in this customs reference number if the sender is registrated as Trusted Shipper in the country of destination'",
                "example": "NL862386524"
              },
              "ImporterReferenceCode": {
                "minLength": 0,
                "maxLength": 50,
                "type": "string",
                "description": "Importer reference code. Fill in a Tax Code or VAT number or Importer code. Depending on the destination with this reference the customs process can be faster.",
                "example": "GB339713089011"
              },
              "TransactionCode": {
                "minLength": 0,
                "maxLength": 50,
                "type": "string",
                "description": "Code and accompanying description according to UPU Codelist 136. Codes to be used are shown below for your reference. Or see the [Reference data](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/transaction-codes).",
                "example": "11"
              },
              "TransactionDescription": {
                "minLength": 0,
                "maxLength": 50,
                "type": "string",
                "description": "Transaction description; see [here](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/transaction-codes) for common examples.",
                "example": "Sale of goods"
              },
              "Content": {
                "type": "array",
                "description": "The contents of the shipment. This section is mandatory (minimum once, maximum 5).",
                "items": {
                  "$ref": "#/components/schemas/labellingCustomsContent"
                }
              }
            }
          },
          "DeliveryAddress": {
            "pattern": "^\\d{2}$",
            "type": "string",
            "description": "Delivery address specification. This field is mandatory when AddressType on the Address is 09.",
            "example": "01"
          },
          "DeliveryDate": {
            "pattern": "^[0-3]\\d-[01]\\d-[12]\\d{3}\\s[0-2]\\d:[0-5]\\d:[0-5]\\d$",
            "type": "string",
            "description": "Mandatory when using Mailbox Parcels (for generation of the coding rule) and delivery options like Evening/Morning/Sameday delivery etc.",
            "example": "30-06-2016 12:00:00"
          },
          "Dimension": {
            "required": [
              "Weight"
            ],
            "type": "object",
            "description": "Note: Length, Width, Height values are about the order of the size and need to be filled in from the longest to the shortest value. For example: shipment's official height is 700mm, width 500mm, length 300mm. The longest side (highest value) of 700mm needs to be entered at Length. Width value becomes 500mm, Height value: 300mm (the lowest). Entering the dimensions in the wrong order may result in incorrect shipping labels and longer delivery times. The maximum dimensions can be found in your PostNL contract.",
            "properties": {
              "Height": {
                "minimum": 1,
                "type": "integer",
                "description": "The shortest side of the shipment in millimeters (mm).",
                "example": 300
              },
              "Length": {
                "minimum": 1,
                "type": "integer",
                "description": "The longest side of the shipment in millimeters (mm).",
                "example": 700
              },
              "Volume": {
                "minimum": 1,
                "type": "integer",
                "description": "Volume of the shipment in centimeters (cm3). Mandatory for E@H-products.",
                "example": 30000
              },
              "Weight": {
                "minimum": 1,
                "type": "integer",
                "description": "Weight of the shipment in grams. Approximate weight suffices",
                "example": 4300
              },
              "Width": {
                "minimum": 1,
                "type": "integer",
                "description": "The second longest side of the shipment in millimeters (mm).",
                "example": 500
              }
            }
          },
          "DownPartnerBarcode": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Barcode of the downstream network partner of PostNL Parcels. Madatory for requesting Parcels Non-EU combilabel product codes.",
            "example": "CD123456785NL"
          },
          "DownPartnerID": {
            "minLength": 0,
            "maxLength": 50,
            "type": "string",
            "description": "Identification of the downstream network partner of PostNL Pakketten."
          },
          "DownPartnerLocation": {
            "minLength": 0,
            "maxLength": 10,
            "type": "string",
            "description": "Identification of the location of the downstream network partner of PostNL Pakketten.",
            "example": "PNPNL-01"
          },
          "Groups": {
            "type": "array",
            "description": "List of 0 or more Group types with data, grouping multiple shipments together. Mandatory for multicollo shipments. Please see [Guidelines](https://developer.postnl.nl/docs/#/http/api-endpoints/send-track/labelling/guidelines) (Multiple shipments) for more information.",
            "items": {
              "$ref": "#/components/schemas/labellingCustomerGroup"
            }
          },
          "HazardousMaterial": {
            "type": "array",
            "description": "Array of hazardous materials contained in the shipment",
            "items": {
              "type": "object",
              "required": [
                "ToxicSubstanceCode"
              ],
              "properties": {
                "ToxicSubstanceCode": {
                  "type": "string",
                  "description": "Toxic substance code as stated in the ADR agreement",
                  "example": "8"
                },
                "AdditionalToxicSubstanceCode": {
                  "type": "array",
                  "description": "Array of additional toxic substance codes as stated in the ADR agreement",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "1-11",
                    "28-4"
                  ]
                },
                "ADRPoints": {
                  "type": "string",
                  "description": "The amount of ADR points",
                  "example": "30"
                },
                "TunnelCode": {
                  "type": "string",
                  "description": "The code indicating for which category of tunnels passage is prohibited with these goods.",
                  "example": "(E)"
                },
                "PackagingGroupCode": {
                  "type": "string",
                  "description": "Code identifying the category of the packaging material.",
                  "example": "III"
                },
                "PackagingGroupDescription": {
                  "type": "string",
                  "description": "Description of the packaging material",
                  "example": "Jerrycan plastic"
                },
                "GrossWeight": {
                  "type": "string",
                  "description": "Gross weight of the goods in grams.",
                  "example": "30000"
                },
                "UNDGNumber": {
                  "type": "string",
                  "description": "The UNDG number",
                  "example": "UN 1760"
                },
                "TransportCategoryCode": {
                  "type": "string",
                  "description": "The transport category code",
                  "example": "3"
                },
                "ChemicalTechnicalDescription": {
                  "type": "string",
                  "description": "The chemical technical description of the goods.",
                  "example": "FOSFORZUUR"
                }
              }
            }
          },
          "ProductCodeCollect": {
            "type": "string",
            "description": "Deprecated. Collection product code of a shipment.",
            "example": "3153"
          },
          "ProductCodeDelivery": {
            "pattern": "^\\d{4,5}$",
            "type": "string",
            "description": "Product code of the shipment. See the [Products page](https://developer.postnl.nl/docs/#/http/reference-data/product-codes-dutch-domestic) for possible products.",
            "default": "3085"
          },
          "ProductOptions": {
            "type": "array",
            "description": "Product options for the shipment, mandatory for certain products, see the [Products page](https://developer.postnl.nl/docs/#/http/reference-data/product-codes-dutch-domestic).",
            "items": {
              "required": [
                "Characteristic",
                "Option"
              ],
              "type": "object",
              "properties": {
                "Characteristic": {
                  "pattern": "^\\d{3}$",
                  "type": "string",
                  "description": "The characteristic of the ProductOption. Mandatory for some products, please see the [Products page](https://developer.postnl.nl/docs/#/http/reference-data/product-codes-dutch-domestic)",
                  "default": "118"
                },
                "Option": {
                  "pattern": "^\\d{3}$",
                  "type": "string",
                  "description": "The product option code for this ProductOption. Mandatory for some products, please see the [Products page](https://developer.postnl.nl/docs/#/http/reference-data/product-codes-dutch-domestic)",
                  "default": "006"
                }
              }
            }
          },
          "ReceiverDateOfBirth": {
            "pattern": "^([0-3]\\d-[01]\\d-[12]\\d{3})$",
            "type": "string",
            "description": "Date of birth. Mandatory for Age check products",
            "example": "10-12-1980"
          },
          "Reference": {
            "type": "string",
            "description": "Your own reference of the shipment. Mandatory for Extra@Home shipments; for E@H this is used to create your order number, so this should be unique for each request.",
            "example": "REF-2016014567"
          },
          "ReferenceCollect": {
            "type": "string",
            "description": "Additional reference of the collect order of the shipment",
            "example": "REF-6659150"
          },
          "Remark": {
            "type": "string",
            "description": "Remark of the shipment.",
            "example": "Fragile"
          },
          "ReturnBarcode": {
            "type": "string",
            "description": "Return barcode of the shipment. PostNL will provide you with a separate customer code specifically for generating the returnBarcode. Mandatory for Label in the Box (return label) shipments.",
            "example": "3SDEVR7762162"
          },
          "ReturnReference": {
            "type": "string",
            "description": "Return reference of the shipment",
            "example": "REF-639265677788"
          },
          "TimeslotID": {
            "type": "string",
            "description": "Deprecated. ID of the chosen timeslot as returned by the timeslot webservice",
            "example": null
          },
          "ExtraFields": {
            "type": "array",
            "description": "Possibility to provide extra key-value pairs to the webservice. Not used at the moment.",
            "example": null,
            "items": {
              "type": "object",
              "properties": {
                "Key": {
                  "type": "string"
                },
                "Value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "shipmentAddress": {
        "required": [
          "AddressType",
          "Countrycode"
        ],
        "type": "object",
        "properties": {
          "AddressType": {
            "pattern": "^\\d{2}$",
            "type": "string",
            "description": "Type of the address. This is a code. You can find the possible values at [Address types](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/address-types)",
            "default": "01"
          },
          "Area": {
            "type": "string",
            "minLength": 0,
            "maxLength": 35,
            "description": "Area of the address",
            "example": "Tuindorp-Oost"
          },
          "Buildingname": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Building name of the address",
            "example": "Gebouw 1"
          },
          "City": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "City of the address",
            "example": "Utrecht"
          },
          "CompanyName": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "This field has a dependency with the field Name. One of both fields must be filled mandatory; using both fields is also allowed. Mandatory when AddressType is 09.",
            "example": "Janssen B.V."
          },
          "Countrycode": {
            "pattern": "^[A-Z]{2}$",
            "type": "string",
            "description": "The ISO2 country codes",
            "example": "NL"
          },
          "Department": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Send to specific department of a company",
            "example": "Finance"
          },
          "Doorcode": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Door code of address. Mandatory for some international shipments.",
            "example": "3345"
          },
          "FirstName": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Remark: please add FirstName and Name (lastname) of the receiver to improve the parcel tracking experience of your customer. ",
            "example": "Henk"
          },
          "Floor": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Send to specific floor of a company",
            "example": "2nd floor"
          },
          "HouseNr": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Mandatory for shipments to Benelux. Max. length is 5 characters (only for Benelux addresses). For Benelux addresses,this field should always be numeric.",
            "example": "74"
          },
          "HouseNrExt": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "House number extension ",
            "example": "A"
          },
          "Name": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Last name of person. This field has a dependency with the field CompanyName. One of both fields must be filled mandatory; using both fields is also allowed. Remark: please add FirstName and Name (lastname) of the receiver to improve the parcel tracking experience of your customer. ",
            "example": "de Graaff"
          },
          "Region": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "Region of the address",
            "example": "Utrecht"
          },
          "Street": {
            "minLength": 0,
            "maxLength": 95,
            "type": "string",
            "description": "This field has a dependency with the field StreetHouseNrExt. One of both fields must be filled mandatory. Using both fields simultaneously is discouraged. ",
            "example": "Molengraaffplantsoen"
          },
          "StreetHouseNrExt": {
            "type": "string",
            "description": "Combination of Street, HouseNr and HouseNrExt. Please see [Guidelines](https://developer.postnl.nl/docs/#/http/api-endpoints/send-track/labelling/guidelines) for the explanation.",
            "example": null
          },
          "Zipcode": {
            "minLength": 0,
            "maxLength": 17,
            "type": "string",
            "description": "Zipcode of the address. Mandatory for shipments to Benelux. Max length (NL) 6 characters,(BE;LU) 4 numeric characters",
            "example": "3571ZZ"
          }
        }
      },
      "labellingCustomsContent": {
        "required": [
          "Description",
          "Quantity",
          "Value",
          "Weight"
        ],
        "type": "object",
        "properties": {
          "Description": {
            "minLength": 1,
            "maxLength": 35,
            "type": "string",
            "description": "Description of goods",
            "example": "Powdered milk"
          },
          "Quantity": {
            "minimum": 1,
            "pattern": "^\\d+$",
            "type": "integer",
            "description": "Fill in the total of the item(s)",
            "example": 2
          },
          "Weight": {
            "pattern": "^\\d+$",
            "type": "integer",
            "description": "Net weight of goods in gram(gr)",
            "example": 2600
          },
          "Value": {
            "pattern": "^\\d+\\.\\d{2}$",
            "type": "number",
            "format": "double",
            "description": "Commercial (customs) value of goods. Fill in the value of the item(s). ",
            "example": 119.99
          },
          "HSTariffNr": {
            "minLength": 6,
            "maxLength": 6,
            "type": "string",
            "description": "Specify every item with the standard HS commodity code (HS-code), [more information](https://tarief.douane.nl/ite-tariff-public/#/home)",
            "example": "100878"
          },
          "CountryOfOrigin": {
            "pattern": "^[A-Z]{2}$",
            "type": "string",
            "description": "Fill in the code of the country where the item was produced (ISO-code), [more information](https://www.iso.org/home.html)",
            "example": "NL"
          }
        }
      },
      "labellingCustomerGroup": {
        "required": [
          "GroupType",
          "MainBarcode"
        ],
        "type": "object",
        "properties": {
          "GroupType": {
            "pattern": "^\\d{2}$",
            "type": "string",
            "description": "Group sort that determines the type of group that is indicated. This is a code. For possible values, please see [here](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/group-types)",
            "example": "03"
          },
          "GroupSequence": {
            "type": "integer",
            "description": "Sequence number of the collo within the complete shipment (e.g. collo 2 of 4) Mandatory for multicollo shipments",
            "example": 1
          },
          "GroupCount": {
            "type": "integer",
            "description": "Total number of colli in the shipment (in case of multicolli shipments) Mandatory for multicollo shipments",
            "example": 2
          },
          "MainBarcode": {
            "minLength": 11,
            "maxLength": 15,
            "type": "string",
            "description": "Main barcode for the shipment (in case of multicolli shipments) Mandatory for multicollo shipments",
            "example": "3SDEVC7239264"
          }
        }
      },
      "labellingResponse": {
        "type": "object",
        "properties": {
          "MergedLabels": {
            "type": "array",
            "description": "The merged label output; only returned if the printer type selected in your request merges the pdf labels into a single file (e.g. using GraphicFile|Merge).",
            "items": {
              "$ref": "#/components/schemas/labellingMergedLabel"
            }
          },
          "ResponseShipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/labellingResponseShipment"
            }
          }
        }
      },
      "labellingMergedLabel": {
        "type": "object",
        "properties": {
          "Barcodes": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Array of barcodes used in the shipment",
              "example": [
                "3SDEVC281677095",
                "3SDEVC991553677"
              ]
            }
          },
          "Labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/labellingLabel"
            }
          }
        }
      },
      "labellingLabel": {
        "type": "object",
        "properties": {
          "Content": {
            "type": "string",
            "description": "Base64 encoded label content",
            "example": "JVBERi0xLjMKJeLjz9MKNSAwIG9iago8PAovQ29udGVudHMg[TRUNCATED]"
          },
          "Labeltype": {
            "type": "string",
            "example": "Label",
            "description": "Type of the label. See possible [Label types](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/label-types)"
          },
          "OutputType": {
            "type": "string",
            "description": "Content type of the label, e.g. zebra of pdf.",
            "example": "PDF"
          }
        }
      },
      "labellingResponseShipment": {
        "type": "object",
        "properties": {
          "ProductCodeDelivery": {
            "type": "string",
            "description": "The product code of the shipment",
            "example": "3085"
          },
          "Labels": {
            "type": "array",
            "description": "All labels belonging to the selected product",
            "items": {
              "$ref": "#/components/schemas/labellingLabel"
            }
          },
          "Barcode": {
            "type": "string",
            "description": "The barcode used on the label",
            "example": "3SDEVC281677095"
          },
          "Errors": {
            "type": "array",
            "items": {}
          },
          "Warnings": {
            "type": "array",
            "description": "Possible warnings. See the [Error Codes](https://developer.postnl.nl/docs/#/http/reference-data/error-codes) for possible values",
            "items": {
              "type": "object",
              "properties": {
                "Code": {
                  "type": "string",
                  "description": "The warning code",
                  "example": "1280203"
                },
                "Description": {
                  "type": "string",
                  "description": "The warning description",
                  "example": "Address is unknown"
                }
              }
            }
          }
        }
      },
      "labellingResponseInvalid": {
        "type": "object",
        "properties": {
          "Errors": {
            "type": "array",
            "description": "A list of errors returned from the webservice. See the [Error codes](https://developer.postnl.nl/docs/#/http/reference-data/error-codes) for possible values.",
            "items": {
              "$ref": "#/components/schemas/labellingError"
            }
          }
        }
      },
      "labellingError": {
        "type": "object",
        "properties": {
          "Error": {
            "type": "string",
            "description": "The error reason",
            "example": "Validation failed for shipment: 3SDEVC949511897"
          },
          "Code": {
            "type": "string",
            "description": "The error code",
            "example": "1280202"
          },
          "Description": {
            "type": "string",
            "description": "The description of the error",
            "example": "Incorrect address specified in address type Sender"
          }
        }
      },
      "barcodeResponse": {
        "type": "object",
        "properties": {
          "Barcode": {
            "type": "string",
            "example": "3SDEVC903942795"
          }
        }
      },
      "barcodeResponseInvalid": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "A list of errors. See [Error codes](https://developer.postnl.nl/docs/#/http/reference-data/error-codes) for possible values.",
            "items": {
              "$ref": "#/components/schemas/barcodeError"
            }
          }
        }
      },
      "barcodeError": {
        "type": "object",
        "properties": {
          "ErrorMsg": {
            "type": "string",
            "description": "The error message",
            "example": "Too many numbers in series"
          },
          "ErrorNumber": {
            "type": "string",
            "description": "The error code",
            "example": "8"
          }
        }
      },
      "checkoutRequest": {
        "type": "object",
        "required": [
          "OrderDate",
          "CutOffTimes",
          "Options",
          "Locations",
          "Days",
          "Addresses"
        ],
        "properties": {
          "OrderDate": {
            "type": "string",
            "description": "The order date of the shipment. Format dd-MM-YYYY HH:mm:ss",
            "example": "11-07-2019 12:34:54",
            "pattern": "^[0-3]\\d-[0-1]\\d-20\\d{2}\\s[0-2]\\d:[0-5]\\d:[0-5]\\d$"
          },
          "ShippingDuration": {
            "type": "integer",
            "description": "The amount of days it takes for a parcel to be received by PostN. If you delivery the parcel the same day as the order is placed on the webshop, please use the value of 1. A value of 2 means the parcel will arrive at PostNL a day later etc.",
            "example": 1
          },
          "CutOffTimes": {
            "type": "array",
            "description": "Array of CutOffTimes",
            "items": {
              "$ref": "#/components/schemas/checkoutCutOffTime"
            }
          },
          "HolidaySorting": {
            "type": "boolean",
            "description": "Specifies whether you are available to ship parcels to PostNL during holidays",
            "example": true
          },
          "Options": {
            "type": "array",
            "description": "Specifies the delivery and pickup options.",
            "items": {
              "$ref": "#/components/schemas/checkoutOption"
            },
            "example": [
              "Daytime",
              "Evening",
              "Pickup"
            ]
          },
          "Locations": {
            "type": "integer",
            "description": "Specifies the number of locations you want returned. This can be a value of 1-3",
            "minimum": 1,
            "maximum": 3,
            "example": 2
          },
          "Days": {
            "type": "integer",
            "description": "Specifies the number of days for which the timeframes are returned. This can be a value of 1-9",
            "minimum": 1,
            "maximum": 9,
            "example": 3
          },
          "Addresses": {
            "type": "array",
            "description": "Array of addresses",
            "items": {
              "$ref": "#/components/schemas/checkoutAddress"
            }
          }
        }
      },
      "checkoutOption": {
        "type": "string",
        "enum": [
          "Daytime",
          "Evening",
          "Sameday",
          "08:00-10:00",
          "08:00-12:00",
          "08:00-17:00",
          "Pickup"
        ],
        "example": "Daytime"
      },
      "checkoutAddress": {
        "type": "object",
        "required": [
          "AddressType",
          "HouseNr",
          "Zipcode",
          "Countrycode"
        ],
        "properties": {
          "AddressType": {
            "type": "string",
            "description": "Address type. 01 is for the receiver address, 02 is for the sender address.",
            "enum": [
              "01",
              "02"
            ],
            "example": "01"
          },
          "Street": {
            "type": "string",
            "description": "Street name; for Belgian addresses, it is strongly recommended to fill in the  street value",
            "example": "Molengraaffplantsoen",
            "maxLength": 35
          },
          "HouseNr": {
            "type": "integer",
            "description": "The house number of the delivery address",
            "example": 74
          },
          "HouseNrExt": {
            "type": "string",
            "description": "House number extension",
            "example": "bis",
            "maxLength": 7
          },
          "Zipcode": {
            "type": "string",
            "description": "Zipcode of the address",
            "minLength": 4,
            "maxLength": 6,
            "example": "3571ZZ"
          },
          "City": {
            "type": "string",
            "description": "City of the address",
            "example": "Utrecht",
            "maxLength": 35
          },
          "Countrycode": {
            "type": "string",
            "description": "ISO2 country code. Limited to NL and BE.",
            "enum": [
              "NL",
              "BE"
            ],
            "example": "NL"
          }
        }
      },
      "checkoutCutOffTime": {
        "type": "object",
        "required": [
          "Day"
        ],
        "properties": {
          "Day": {
            "$ref": "#/components/schemas/checkoutCutOffDay"
          },
          "Available": {
            "type": "boolean",
            "description": "Specifies whether you are available to process shipments during the selected day",
            "example": true
          },
          "Type": {
            "$ref": "#/components/schemas/checkoutCutOffType"
          },
          "Time": {
            "type": "string",
            "description": "Specifies the cutoff time (mandatory when Available is true)",
            "example": "23:00:00",
            "pattern": "^[0-2]\\d:[0-5]\\d:[0-5]\\d$"
          }
        }
      },
      "checkoutCutOffDay": {
        "type": "string",
        "description": "The day for which the cutoff time applies. 00 is your default cutoff that applies to all otherwise not specified days, 01 to 07 is Monday to Sunday.",
        "enum": [
          "00",
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07"
        ],
        "example": "00"
      },
      "checkoutCutOffType": {
        "type": "string",
        "description": "Specifies the type belonging to the cutoff time.",
        "enum": [
          "Regular",
          "Sameday",
          "Today"
        ],
        "example": "Regular"
      },
      "checkoutResponse": {
        "type": "object",
        "properties": {
          "DeliveryOptions": {
            "type": "array",
            "description": "Array of delivery options",
            "items": {
              "$ref": "#/components/schemas/checkoutDeliveryOption"
            }
          },
          "PickupOptions": {
            "type": "array",
            "description": "Array of possible pickup options",
            "items": {
              "$ref": "#/components/schemas/checkoutPickupOption"
            }
          },
          "Warnings": {
            "type": "array",
            "description": "An array of warnings",
            "items": {
              "$ref": "#/components/schemas/checkoutWarning"
            }
          }
        }
      },
      "checkoutWarning": {
        "type": "object",
        "properties": {
          "DeliveryDate": {
            "type": "string",
            "description": "Deliverydate that triggered the warning",
            "example": "07-07-2019"
          },
          "Code": {
            "type": "string",
            "description": "Warning code (for a possible list of warnings, see the generic error codes page)",
            "example": "5034"
          },
          "Description": {
            "type": "string",
            "description": "Warning description (for a possible list of warnings, see the generic error codes page)",
            "example": "No delivery option found on date"
          },
          "Options": {
            "$ref": "#/components/schemas/checkoutWarningOption"
          }
        }
      },
      "checkoutWarningOption": {
        "type": "string",
        "enum": [
          "Daytime",
          "Evening",
          "Sameday",
          "08:00-10:00",
          "08:00-12:00",
          "08:00-17:00",
          "Pickup"
        ],
        "example": "Daytime"
      },
      "checkoutPickupOption": {
        "type": "object",
        "properties": {
          "PickupDate": {
            "type": "string",
            "description": "Date from which the parcel can be picked up at the PostNL location",
            "example": "09-07-2019"
          },
          "ShippingDate": {
            "type": "string",
            "description": "The date when you need to deliver the shipment to PostNL to ensure the expected delivery date is achieved. Will be returned as 'null' if not calculated",
            "example": "08-07-2019"
          },
          "Option": {
            "type": "string",
            "description": "The pickup option",
            "example": "Pickup"
          },
          "Locations": {
            "type": "array",
            "description": "Array of pickup locations",
            "items": {
              "$ref": "#/components/schemas/checkoutLocation"
            }
          }
        }
      },
      "checkoutLocation": {
        "type": "object",
        "properties": {
          "Address": {
            "$ref": "#/components/schemas/checkoutPickupAddress"
          },
          "PickupTime": {
            "type": "string",
            "description": "Time from when the parcel can be retrieved at the pickup location",
            "example": "15:00"
          },
          "OpeningHours": {
            "type": "object",
            "description": "The standard opening hours of the pickup location",
            "properties": {
              "Monday": {
                "$ref": "#/components/schemas/openingHoursPerDay"
              },
              "Tuesday": {
                "$ref": "#/components/schemas/openingHoursPerDay"
              },
              "Wednesday": {
                "$ref": "#/components/schemas/openingHoursPerDay"
              },
              "Thursday": {
                "$ref": "#/components/schemas/openingHoursPerDay"
              },
              "Friday": {
                "$ref": "#/components/schemas/openingHoursPerDay"
              },
              "Saturday": {
                "$ref": "#/components/schemas/openingHoursPerDay"
              },
              "Sunday": {
                "$ref": "#/components/schemas/openingHoursPerDay"
              }
            }
          },
          "Distance": {
            "type": "integer",
            "description": "The calculated distance (in meters) between the location specified and the address provided in the request",
            "example": 234
          },
          "LocationCode": {
            "type": "string",
            "description": "The location identifier",
            "example": "8101163043"
          },
          "PartnerID": {
            "type": "string",
            "description": "The partner identifier; not used anymore",
            "example": "PNPNL-01"
          },
          "Sustainability": {
            "type": "object",
            "description": "Sustainability score; see [Sustainability codes](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/sustainability-codes) for possible values.",
            "properties": {
              "Code": {
                "type": "string",
                "description": "Sustainability score code",
                "example": "02",
                "enum": [
                  "00",
                  "01",
                  "02",
                  "03"
                ]
              },
              "Description": {
                "type": "string",
                "description": "Sustainability score code description",
                "example": "Sustainable option"
              }
            }
          }
        }
      },
      "openingHoursPerDay": {
        "type": "object",
        "properties": {
          "From": {
            "type": "string",
            "example": "08:30:00"
          },
          "To": {
            "type": "string",
            "example": "22:30:00"
          }
        }
      },
      "checkoutPickupAddress": {
        "type": "object",
        "description": "The pickup location address",
        "properties": {
          "Street": {
            "type": "string",
            "description": "The pickup location street",
            "example": "Siriusdreef"
          },
          "Zipcode": {
            "type": "string",
            "description": "The pickup location zipcode",
            "example": "2132WT"
          },
          "HouseNr": {
            "type": "integer",
            "description": "The pickup location housenumber",
            "example": 42
          },
          "HouseNrExt": {
            "type": "string",
            "description": "The pickup location housenumber extension",
            "example": "-60"
          },
          "Countrycode": {
            "type": "string",
            "description": "The pickup location country",
            "example": "NL"
          },
          "CompanyName": {
            "type": "string",
            "description": "The pickup location company name",
            "example": "Pickup company BV"
          }
        }
      },
      "checkoutDeliveryOption": {
        "type": "object",
        "properties": {
          "DeliveryDate": {
            "type": "string",
            "description": "The possible delivery date",
            "example": "09-07-2019"
          },
          "Timeframe": {
            "type": "array",
            "description": "Array of timeframes",
            "items": {
              "$ref": "#/components/schemas/checkoutTimeFrame"
            }
          }
        }
      },
      "checkoutTimeFrame": {
        "type": "object",
        "properties": {
          "From": {
            "type": "string",
            "description": "Format hh:mm:ss",
            "example": "18:00:00"
          },
          "To": {
            "type": "string",
            "description": "Format hh:mm:ss",
            "example": "22:30:00"
          },
          "Options": {
            "type": "array",
            "description": "The delivery options applicable to the timeframe information. See [Delivery Options](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/delivery-options) for possible values.",
            "items": {
              "$ref": "#/components/schemas/checkoutOption"
            }
          },
          "ShippingDate": {
            "type": "string",
            "description": "The date when you need to deliver the shipment to PostNL to ensure the expected delivery date is achieved. Will be returned as 'null' if not calculated",
            "example": "08-07-2019"
          },
          "Sustainability": {
            "type": "object",
            "description": "Sustainability score; see [Sustainability codes](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/sustainability-codes) for possible values.",
            "properties": {
              "Code": {
                "type": "string",
                "description": "Sustainability score code",
                "example": "02",
                "enum": [
                  "00",
                  "01",
                  "02",
                  "03"
                ]
              },
              "Description": {
                "type": "string",
                "description": "Sustainability score code description",
                "example": "Sustainable option"
              }
            }
          }
        }
      },
      "MethodNotAllowedOnlyPost": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Only POST requests allowed"
          },
          "http_status_code": {
            "type": "number",
            "example": 405
          }
        }
      },
      "deliverydateOption": {
        "type": "string",
        "enum": [
          "Daytime",
          "Evening",
          "Morning",
          "Noon",
          "Afternoon"
        ]
      },
      "deliverydateOptions": {
        "type": "object",
        "description": "The delivery options for which a delivery date is returned. Only one delivery option is specified. See [Delivery Options](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/delivery-options) for possible values.",
        "properties": {
          "string": {
            "type": "string",
            "enum": [
              "Daytime",
              "Evening",
              "Morning",
              "Noon",
              "Afternoon"
            ]
          }
        }
      },
      "deliverydateDeliveryResponse": {
        "type": "object",
        "properties": {
          "DeliveryDate": {
            "type": "string",
            "example": "30-05-2022"
          },
          "Options": {
            "$ref": "#/components/schemas/deliverydateOptions"
          },
          "Sustainability": {
            "type": "object",
            "description": "Sustainability score; see [Sustainability codes](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/sustainability-codes) for possible values.",
            "properties": {
              "Code": {
                "type": "string",
                "description": "Sustainability score code",
                "example": "02",
                "enum": [
                  "00",
                  "01",
                  "02",
                  "03"
                ]
              },
              "Description": {
                "type": "string",
                "description": "Sustainability score code description",
                "example": "Sustainable option"
              }
            }
          }
        }
      },
      "deliverydateShippingResponse": {
        "type": "object",
        "properties": {
          "SentDate": {
            "type": "string",
            "example": "29-06-2022"
          }
        }
      },
      "deliverydateInvalidResponse": {
        "type": "object",
        "properties": {
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "Error": {
            "type": "object",
            "properties": {
              "ErrorCode": {
                "type": "string",
                "example": "3000"
              },
              "ErrorDescription": {
                "type": "string",
                "example": "Request format is invalid"
              }
            }
          },
          "RequestId": {
            "type": "string",
            "example": "09fd61fe-0099-4349-b71d-dce5c2472be9"
          }
        }
      },
      "locationsDeliveryOption": {
        "type": "string",
        "default": "PG",
        "enum": [
          "PG",
          "PA",
          "PG_EX"
        ]
      },
      "locationsResponseMultiple": {
        "type": "object",
        "properties": {
          "GetLocationsResult": {
            "$ref": "#/components/schemas/getLocationsResultMultiple"
          }
        }
      },
      "locationResponseSingle": {
        "type": "object",
        "properties": {
          "GetLocationsResult": {
            "$ref": "#/components/schemas/getLocationsResultSingle"
          }
        }
      },
      "getLocationsResultMultiple": {
        "type": "object",
        "properties": {
          "ResponseLocation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/location"
            }
          }
        }
      },
      "getLocationsResultSingle": {
        "type": "object",
        "properties": {
          "ResponseLocation": {
            "$ref": "#/components/schemas/location"
          }
        }
      },
      "location": {
        "type": "object",
        "properties": {
          "Address": {
            "$ref": "#/components/schemas/locationsAddress"
          },
          "DeliveryOptions": {
            "type": "object",
            "description": "The options belonging to the pickup location. The delivery options RETA, UL, PU, DO, BW, RT and BWUL can be shown in the response. Please ignore these codes. These codes are internal PostNL codes.",
            "properties": {
              "string": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "RETA",
                  "DO",
                  "PG",
                  "RT"
                ]
              }
            }
          },
          "Distance": {
            "type": "integer",
            "format": "int32",
            "description": "The distance from the address/coordinates provided in the request to the pickup location returned. Distance in meters.",
            "example": 102
          },
          "Latitude": {
            "type": "number",
            "format": "float",
            "description": "The latitude of the pickup location",
            "example": 52.10223388
          },
          "LocationCode": {
            "type": "integer",
            "format": "int32",
            "description": "The pickup location identifier",
            "example": 163043
          },
          "Longitude": {
            "type": "number",
            "format": "float",
            "description": "The longitude of the pickup location",
            "example": 5.13634192
          },
          "Name": {
            "type": "string",
            "description": "The name of the pickup location",
            "example": "Tonys Tabakszaak"
          },
          "OpeningHours": {
            "$ref": "#/components/schemas/locationsOpeningHours"
          },
          "Sustainability": {
            "type": "object",
            "description": "Sustainability score; see [Sustainability codes](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/sustainability-codes) for possible values.",
            "properties": {
              "Code": {
                "type": "string",
                "description": "Sustainability score code",
                "example": "02",
                "enum": [
                  "00",
                  "01",
                  "02",
                  "03"
                ]
              },
              "Description": {
                "type": "string",
                "description": "Sustainability score code description",
                "example": "Sustainable option"
              }
            }
          },
          "PartnerName": {
            "type": "string",
            "description": "The partner name belonging to the pickup location. Can be ignored, no longer used.",
            "example": "PostNL"
          },
          "RetailNetworkID": {
            "type": "string",
            "description": "The retail network belonging to the pickup location. Can be ignored, no longer used",
            "example": "PNPNL-01"
          }
        }
      },
      "locationsOpeningHours": {
        "type": "object",
        "description": "The standard opening times of the pickup location",
        "properties": {
          "Monday": {
            "type": "object",
            "properties": {
              "string": {
                "type": "string",
                "example": "08:00-18:00"
              }
            }
          },
          "Tuesday": {
            "type": "object",
            "properties": {
              "string": {
                "type": "string",
                "example": "08:00-18:00"
              }
            }
          },
          "Wednesday": {
            "type": "object",
            "properties": {
              "string": {
                "type": "string",
                "example": "08:00-18:00"
              }
            }
          },
          "Thursday": {
            "type": "object",
            "properties": {
              "string": {
                "type": "string",
                "example": "08:00-18:00"
              }
            }
          },
          "Friday": {
            "type": "object",
            "properties": {
              "string": {
                "type": "string",
                "example": "08:00-18:00"
              }
            }
          },
          "Saturday": {
            "type": "object",
            "properties": {
              "string": {
                "type": "string",
                "example": "10:00-16:00"
              }
            }
          },
          "Sunday": {
            "type": "object",
            "properties": {
              "string": {
                "type": "string",
                "example": "10:00-14:00"
              }
            }
          }
        }
      },
      "locationsAddress": {
        "type": "object",
        "properties": {
          "City": {
            "type": "string",
            "description": "The city of the pickup location address",
            "example": "Hoofddorp"
          },
          "Countrycode": {
            "type": "string",
            "description": "The country of the pickup location address",
            "example": "NL"
          },
          "HouseNr": {
            "type": "integer",
            "format": "int32",
            "description": "The house number of the pickup location address",
            "example": 42
          },
          "HouseNrExt": {
            "type": "string",
            "description": "The house number extension of the pickup location address",
            "example": "-60"
          },
          "Remark": {
            "type": "string",
            "description": "Additional information about the pickup location",
            "example": "Dit is een Pakketpunt. Pakketten die je op werkdagen vóór lichtingstijd afgeeft, bezorgen we binnen Nederland de volgende dag. Op zaterdag worden alléén pakketten die je afgeeft voor 15:00 uur maandag bezorgd."
          },
          "Street": {
            "type": "string",
            "description": "The street of the pickup location address",
            "example": "Siriusdreef"
          },
          "Zipcode": {
            "type": "string",
            "description": "The zipcode of the pickup location address",
            "example": "2132WT"
          }
        }
      },
      "postalcodeCheckResponse": {
        "type": "array",
        "description": "Array of addresses found. If no exact match is available, multiple addresses will be returned.",
        "items": {
          "$ref": "#/components/schemas/postalcodeCheckAddress"
        }
      },
      "postalcodeCheckAddress": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "City of requested address",
            "example": "UTRECHT"
          },
          "postalCode": {
            "type": "string",
            "description": "Postalcode of requested address",
            "example": "3571ZZ"
          },
          "streetName": {
            "type": "string",
            "description": "Street of requested address",
            "example": "Molengraaffplantsoen"
          },
          "houseNumber": {
            "type": "integer",
            "description": "Housenumber of requested address",
            "example": 74
          },
          "houseNumberAddition": {
            "type": "string",
            "description": "Housenumber addition",
            "example": "bis"
          },
          "formattedAddress": {
            "type": "array",
            "description": "Full formatted address according to PostNL standard (returns each line as a separate string)",
            "items": {
              "type": "string"
            },
            "example": [
              "Molengraaffplantsoen 74",
              "3571ZZ UTRECHT"
            ]
          }
        }
      },
      "postalcodeCheckResponseInvalid": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/postalcodeCheckError"
            }
          }
        }
      },
      "postalcodeCheckError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "400"
          },
          "title": {
            "type": "string",
            "example": "Bad request"
          },
          "detail": {
            "type": "string",
            "example": "Input field 'housenumber' must be a number"
          }
        }
      },
      "timeframeOptions": {
        "type": "string",
        "enum": [
          "Daytime",
          "Today",
          "Sameday",
          "Evening",
          "Morning",
          "Noon",
          "Sunday",
          "Afternoon"
        ]
      },
      "timeframeResponse": {
        "type": "object",
        "properties": {
          "Timeframes": {
            "type": "object",
            "properties": {
              "Timeframe": {
                "type": "array",
                "description": "A calculated delivery timeframe",
                "items": {
                  "type": "object",
                  "properties": {
                    "Date": {
                      "type": "string",
                      "description": "The expected date of delivery",
                      "example": "02-07-2022"
                    },
                    "Timeframes": {
                      "$ref": "#/components/schemas/timeframesResponseObject"
                    }
                  }
                }
              }
            }
          },
          "ReasonNoTimeframes": {
            "type": "object",
            "properties": {
              "ReasonNoTimeframe": {
                "type": "array",
                "description": "The reason why no timeframe was returned",
                "items": {
                  "type": "object",
                  "properties": {
                    "Code": {
                      "type": "string",
                      "description": "The reason code",
                      "example": "1"
                    },
                    "Date": {
                      "type": "string",
                      "description": "The date associated with the reason no timeframe was calculated",
                      "example": "02-07-2022"
                    },
                    "Description": {
                      "type": "string",
                      "description": "The description associated with the reason no timeframe was calculated",
                      "example": "Delivery date not allowed"
                    },
                    "Options": {
                      "$ref": "#/components/schemas/NoTimeframesOptions"
                    },
                    "Sustainability": {
                      "type": "object",
                      "description": "Sustainability score; see [Sustainability codes](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/sustainability-codes) for possible values.",
                      "properties": {
                        "Code": {
                          "type": "string",
                          "description": "Sustainability score code",
                          "example": "02",
                          "enum": [
                            "00",
                            "01",
                            "02",
                            "03"
                          ]
                        },
                        "Description": {
                          "type": "string",
                          "description": "Sustainability score code description",
                          "example": "Sustainable option"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "NoTimeframesOptions": {
        "type": "object",
        "description": "The option for which no timeframe was calculated for a specific date",
        "properties": {
          "string": {
            "type": "string",
            "enum": [
              "Daytime",
              "Today",
              "Sameday",
              "Evening",
              "Morning",
              "Noon",
              "Sunday",
              "Afternoon"
            ],
            "example": "Evening"
          }
        }
      },
      "timeframesResponseObject": {
        "type": "object",
        "properties": {
          "TimeframeTimeframe": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "From": {
                  "type": "string",
                  "description": "The start time of the expected delivery window",
                  "example": "12:30:00"
                },
                "Options": {
                  "type": "object",
                  "description": "The delivery option for which the timeframe is calculated. See [Delivery Options](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/delivery-options) for possible values.",
                  "properties": {
                    "string": {
                      "type": "string",
                      "enum": [
                        "Daytime",
                        "Today",
                        "Sameday",
                        "Evening",
                        "Morning",
                        "Noon",
                        "Sunday",
                        "Afternoon"
                      ],
                      "example": "Daytime"
                    }
                  }
                },
                "To": {
                  "type": "string",
                  "description": "The end time of the expected delivery window",
                  "example": "14:30:00"
                },
                "Sustainability": {
                  "type": "object",
                  "description": "Sustainability score; see [Sustainability codes](https://developer.postnl.nl/docs/#/http/reference-data/reference-codes/sustainability-codes) for possible values.",
                  "properties": {
                    "Code": {
                      "type": "string",
                      "description": "Sustainability score code",
                      "example": "02",
                      "enum": [
                        "00",
                        "01",
                        "02",
                        "03"
                      ]
                    },
                    "Description": {
                      "type": "string",
                      "description": "Sustainability score code description",
                      "example": "Sustainable option"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "InvalidRequest": {
        "type": "object",
        "properties": {
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "Error": {
            "type": "object",
            "properties": {
              "ErrorCode": {
                "type": "string",
                "example": "3000"
              },
              "ErrorDescription": {
                "type": "string",
                "example": "Request format is invalid"
              }
            }
          },
          "RequestId": {
            "type": "string",
            "example": "09fd61fe-0099-4349-b71d-dce5c2472be9"
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Failed to resolve API Key variable 'request.header.apikey'"
          },
          "http_status_code": {
            "type": "number",
            "example": 401
          }
        }
      },
      "MethodNotAllowedOnlyGetPost": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Only Get & POST requests allowed"
          },
          "http_status_code": {
            "type": "number",
            "example": 405
          }
        }
      },
      "TooManyRequests": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Too many requests. Rate limit exceeded!"
          },
          "http_status_code": {
            "type": "number",
            "example": 429
          }
        }
      },
      "InternalServerError": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "object",
            "properties": {
              "faultstring": {
                "type": "string",
                "example": "Unexpected token in object literal"
              },
              "detail": {
                "type": "object",
                "properties": {
                  "errorcode": {
                    "type": "string",
                    "example": "Validation Fault"
                  }
                }
              }
            }
          }
        }
      }
    },
    "examples": {
      "shippingstatusExampleResponseSingleShipmentCurrent": {
        "value": {
          "CurrentStatus": {
            "Shipment": {
              "MainBarcode": "3SDEVC288882229",
              "Barcode": "3SDEVC288882229",
              "ShipmentAmount": "1",
              "ShipmentCounter": "1",
              "Customer": {
                "CustomerCode": "DEVC",
                "CustomerNumber": "11223344",
                "Name": "Testaccount API PNP"
              },
              "ProductCode": "002285",
              "ProductDescription": "Parcels, domestic &lt;= 10 kg",
              "Reference": "202213331635095807",
              "DeliveryDate": "2022-11-08",
              "Dimension": {
                "Height": "125",
                "Length": "250",
                "Volume": "6250",
                "Weight": "180",
                "Width": "200"
              },
              "Address": [
                {
                  "AddressType": "01",
                  "Building": {},
                  "City": "Utrecht",
                  "CompanyName": {},
                  "CountryCode": "NL",
                  "DepartmentName": {},
                  "District": {},
                  "FirstName": "Peter",
                  "Floor": {},
                  "HouseNumber": "74",
                  "HouseNumberSuffix": {},
                  "LastName": "de Ruiter",
                  "Region": {},
                  "Remark": {},
                  "Street": "Molengraaffplantsoen",
                  "Zipcode": "3571ZZ"
                },
                {
                  "AddressType": "02",
                  "Building": {},
                  "City": "Hoofddorp",
                  "CompanyName": "PostNL Pakketten",
                  "CountryCode": "NL",
                  "DepartmentName": {},
                  "District": {},
                  "FirstName": {},
                  "Floor": {},
                  "HouseNumber": "42",
                  "HouseNumberSuffix": "-60",
                  "LastName": {},
                  "Region": {},
                  "Remark": {},
                  "Street": "Siriusdreef",
                  "Zipcode": "2132WT"
                }
              ],
              "ProductOptions": [
                {
                  "OptionCode": "6",
                  "CharacteristicCode": "118"
                }
              ],
              "Status": {
                "TimeStamp": "08-11-2022 10:13:20",
                "StatusCode": "7",
                "StatusDescription": "Shipment out for delivery",
                "PhaseCode": "3",
                "PhaseDescription": "Distribution"
              }
            }
          }
        }
      },
      "shippingstatusExampleResponseSingleShipmentComplete": {
        "value": {
          "CompleteStatus": {
            "Shipment": {
              "MainBarcode": "3SDEVC288882229",
              "Barcode": "3SDEVC288882229",
              "ShipmentAmount": "1",
              "ShipmentCounter": "1",
              "Customer": {
                "CustomerCode": "DEVC",
                "CustomerNumber": "11223344",
                "Name": "Testaccount API PNP"
              },
              "ProductCode": "002285",
              "ProductDescription": "Parcels, domestic &lt;= 10 kg",
              "Reference": "202213331635095807",
              "DeliveryDate": "2022-11-08",
              "Dimension": {
                "Height": "125",
                "Length": "250",
                "Volume": "6250",
                "Weight": "180",
                "Width": "200"
              },
              "Address": [
                {
                  "AddressType": "01",
                  "Building": {},
                  "City": "Utrecht",
                  "CompanyName": {},
                  "CountryCode": "NL",
                  "DepartmentName": {},
                  "District": {},
                  "FirstName": "Peter",
                  "Floor": {},
                  "HouseNumber": "74",
                  "HouseNumberSuffix": {},
                  "LastName": "de Ruiter",
                  "Region": {},
                  "Remark": {},
                  "Street": "Molengraaffplantsoen",
                  "Zipcode": "3571ZZ"
                },
                {
                  "AddressType": "02",
                  "Building": {},
                  "City": "Hoofddorp",
                  "CompanyName": "PostNL Pakketten",
                  "CountryCode": "NL",
                  "DepartmentName": {},
                  "District": {},
                  "FirstName": {},
                  "Floor": {},
                  "HouseNumber": "42",
                  "HouseNumberSuffix": "-60",
                  "LastName": {},
                  "Region": {},
                  "Remark": {},
                  "Street": "Siriusdreef",
                  "Zipcode": "2132WT"
                }
              ],
              "Event": [
                {
                  "Code": "J05",
                  "Description": "Driver is en route",
                  "DestinationLocationCode": {},
                  "LocationCode": "171966",
                  "RouteCode": "20221108_HD_171966_0444",
                  "RouteName": "0444 Spijkenisse 12",
                  "TimeStamp": "08-11-2022 10:13:20"
                },
                {
                  "Code": "J01",
                  "Description": "Shipment has been sorted",
                  "DestinationLocationCode": "171967",
                  "LocationCode": "171967",
                  "RouteCode": "444",
                  "RouteName": "0444 Spijkenisse 12",
                  "TimeStamp": "08-11-2022 09:58:11"
                },
                {
                  "Code": "B01",
                  "Description": "Shipment received by PostNL",
                  "DestinationLocationCode": "171967",
                  "LocationCode": "212124",
                  "RouteCode": "444",
                  "RouteName": "0444 Spijkenisse 12",
                  "TimeStamp": "08-11-2022 00:08:39"
                },
                {
                  "Code": "A01",
                  "Description": "Shipment expected, but not yet arrived at PostNL",
                  "DestinationLocationCode": {},
                  "LocationCode": "888888",
                  "RouteCode": {},
                  "RouteName": {},
                  "TimeStamp": "07-11-2022 19:19:31"
                }
              ],
              "ProductOptions": [
                {
                  "OptionCode": "6",
                  "CharacteristicCode": "118"
                }
              ],
              "Expectation": {
                "ETAFrom": "2022-11-08T14:50:00",
                "ETATo": "2022-11-08T16:50:00"
              },
              "Status": {
                "TimeStamp": "08-11-2022 10:13:20",
                "StatusCode": "7",
                "StatusDescription": "Shipment out for delivery",
                "PhaseCode": "3",
                "PhaseDescription": "Distribution"
              },
              "OldStatus": [
                {
                  "TimeStamp": "08-11-2022 10:13:20",
                  "StatusCode": "7",
                  "StatusDescription": "Shipment out for delivery",
                  "PhaseCode": "3",
                  "PhaseDescription": "Distribution"
                },
                {
                  "TimeStamp": "08-11-2022 10:13:20",
                  "StatusCode": "99",
                  "StatusDescription": "Not applicable",
                  "PhaseCode": "99",
                  "PhaseDescription": "Not applicable"
                },
                {
                  "TimeStamp": "08-11-2022 10:12:59",
                  "StatusCode": "99",
                  "StatusDescription": "Not applicable",
                  "PhaseCode": "99",
                  "PhaseDescription": "Not applicable"
                },
                {
                  "TimeStamp": "08-11-2022 09:58:50",
                  "StatusCode": "99",
                  "StatusDescription": "Not applicable",
                  "PhaseCode": "99",
                  "PhaseDescription": "Not applicable"
                },
                {
                  "TimeStamp": "08-11-2022 09:58:11",
                  "StatusCode": "5",
                  "StatusDescription": "Shipment sorted",
                  "PhaseCode": "2",
                  "PhaseDescription": "Sorting"
                },
                {
                  "TimeStamp": "08-11-2022 00:10:11.081",
                  "StatusCode": "99",
                  "StatusDescription": "Not applicable",
                  "PhaseCode": "99",
                  "PhaseDescription": "Not applicable"
                },
                {
                  "TimeStamp": "08-11-2022 00:08:39",
                  "StatusCode": "2",
                  "StatusDescription": "Shipment accepted",
                  "PhaseCode": "1",
                  "PhaseDescription": "Collection"
                },
                {
                  "TimeStamp": "07-11-2022 19:20:53.471",
                  "StatusCode": "99",
                  "StatusDescription": "Not applicable",
                  "PhaseCode": "99",
                  "PhaseDescription": "Not applicable"
                },
                {
                  "TimeStamp": "07-11-2022 19:20:52",
                  "StatusCode": "99",
                  "StatusDescription": "Not applicable",
                  "PhaseCode": "99",
                  "PhaseDescription": "Not applicable"
                },
                {
                  "TimeStamp": "07-11-2022 19:19:31",
                  "StatusCode": "1",
                  "StatusDescription": "Shipment pre-alerted",
                  "PhaseCode": "1",
                  "PhaseDescription": "Collection"
                }
              ]
            }
          }
        }
      },
      "shippingstatusExampleResponseMulticollo": {
        "value": {
          "CompleteStatus": {
            "Shipment": [
              {
                "MainBarcode": "3SDEVC7755088",
                "Barcode": "3SDEVC5672025",
                "ShipmentAmount": "2",
                "ShipmentCounter": "2",
                "Customer": {
                  "CustomerCode": "DEVC",
                  "CustomerNumber": "11223344",
                  "Name": "Testaccount API PNP"
                },
                "ProductCode": "003085",
                "ProductDescription": "Standaard Zending",
                "Reference": {},
                "Dimension": {
                  "Height": {},
                  "Length": {},
                  "Volume": {},
                  "Weight": {},
                  "Width": {}
                },
                "Address": [
                  {
                    "AddressType": "01",
                    "Building": {},
                    "City": "Utrecht",
                    "CompanyName": {},
                    "CountryCode": "NL",
                    "DepartmentName": {},
                    "District": {},
                    "FirstName": "Peter",
                    "Floor": {},
                    "HouseNumber": "9",
                    "HouseNumberSuffix": "A BIS",
                    "LastName": "de Ruiter",
                    "Region": {},
                    "Remark": {},
                    "Street": "Bilderdijkstraat",
                    "Zipcode": "3532VA"
                  },
                  {
                    "AddressType": "02",
                    "Building": {},
                    "City": "Hoofddorp",
                    "CompanyName": "PostNL",
                    "CountryCode": "NL",
                    "DepartmentName": {},
                    "District": {},
                    "FirstName": {},
                    "Floor": {},
                    "HouseNumber": "42",
                    "HouseNumberSuffix": {},
                    "LastName": {},
                    "Region": {},
                    "Remark": {},
                    "Street": "Siriusdreef",
                    "Zipcode": "2132WT"
                  }
                ],
                "Event": {
                  "Code": "A01",
                  "Description": "Pakket is nog niet door PostNL ontvangen of verwerkt",
                  "DestinationLocationCode": {},
                  "LocationCode": "888888",
                  "RouteCode": {},
                  "RouteName": {},
                  "TimeStamp": "07-11-2022 12:36:41"
                },
                "Status": {
                  "TimeStamp": "08-11-2022 04:15:00",
                  "StatusCode": "13",
                  "StatusDescription": "Voorgemeld: nog niet aangenomen",
                  "PhaseCode": "1",
                  "PhaseDescription": "Collectie"
                },
                "OldStatus": [
                  {
                    "TimeStamp": "08-11-2022 04:15:00",
                    "StatusCode": "13",
                    "StatusDescription": "Voorgemeld: nog niet aangenomen",
                    "PhaseCode": "1",
                    "PhaseDescription": "Collectie"
                  },
                  {
                    "TimeStamp": "07-11-2022 12:39:49.364",
                    "StatusCode": "99",
                    "StatusDescription": "Niet van toepassing",
                    "PhaseCode": "99",
                    "PhaseDescription": "Niet van toepassing"
                  },
                  {
                    "TimeStamp": "07-11-2022 12:39:48",
                    "StatusCode": "99",
                    "StatusDescription": "Niet van toepassing",
                    "PhaseCode": "99",
                    "PhaseDescription": "Niet van toepassing"
                  },
                  {
                    "TimeStamp": "07-11-2022 12:36:41",
                    "StatusCode": "1",
                    "StatusDescription": "Zending voorgemeld",
                    "PhaseCode": "1",
                    "PhaseDescription": "Collectie"
                  }
                ]
              },
              {
                "MainBarcode": "3SDEVC7755088",
                "Barcode": "3SDEVC7755088",
                "ShipmentAmount": "2",
                "ShipmentCounter": "1",
                "Customer": {
                  "CustomerCode": "DEVC",
                  "CustomerNumber": "11223344",
                  "Name": "Testaccount API PNP"
                },
                "ProductCode": "003085",
                "ProductDescription": "Standaard Zending",
                "Reference": {},
                "Dimension": {
                  "Height": {},
                  "Length": {},
                  "Volume": {},
                  "Weight": {},
                  "Width": {}
                },
                "Address": [
                  {
                    "AddressType": "01",
                    "Building": {},
                    "City": "Utrecht",
                    "CompanyName": {},
                    "CountryCode": "NL",
                    "DepartmentName": {},
                    "District": {},
                    "FirstName": "Peter",
                    "Floor": {},
                    "HouseNumber": "9",
                    "HouseNumberSuffix": "A BIS",
                    "LastName": "de Ruiter",
                    "Region": {},
                    "Remark": {},
                    "Street": "Bilderdijkstraat",
                    "Zipcode": "3532VA"
                  },
                  {
                    "AddressType": "02",
                    "Building": {},
                    "City": "Hoofddorp",
                    "CompanyName": "PostNL",
                    "CountryCode": "NL",
                    "DepartmentName": {},
                    "District": {},
                    "FirstName": {},
                    "Floor": {},
                    "HouseNumber": "42",
                    "HouseNumberSuffix": {},
                    "LastName": {},
                    "Region": {},
                    "Remark": {},
                    "Street": "Siriusdreef",
                    "Zipcode": "2132WT"
                  }
                ],
                "Event": {
                  "Code": "A01",
                  "Description": "Pakket is nog niet door PostNL ontvangen of verwerkt",
                  "DestinationLocationCode": {},
                  "LocationCode": "888888",
                  "RouteCode": {},
                  "RouteName": {},
                  "TimeStamp": "07-11-2022 12:35:44"
                },
                "ProductOptions": [
                  {
                    "OptionCode": "6",
                    "CharacteristicCode": "118"
                  }
                ],
                "Status": {
                  "TimeStamp": "08-11-2022 04:15:00",
                  "StatusCode": "13",
                  "StatusDescription": "Voorgemeld: nog niet aangenomen",
                  "PhaseCode": "1",
                  "PhaseDescription": "Collectie"
                },
                "OldStatus": [
                  {
                    "TimeStamp": "08-11-2022 04:15:00",
                    "StatusCode": "13",
                    "StatusDescription": "Voorgemeld: nog niet aangenomen",
                    "PhaseCode": "1",
                    "PhaseDescription": "Collectie"
                  },
                  {
                    "TimeStamp": "07-11-2022 12:39:26.501",
                    "StatusCode": "99",
                    "StatusDescription": "Niet van toepassing",
                    "PhaseCode": "99",
                    "PhaseDescription": "Niet van toepassing"
                  },
                  {
                    "TimeStamp": "07-11-2022 12:39:25",
                    "StatusCode": "99",
                    "StatusDescription": "Niet van toepassing",
                    "PhaseCode": "99",
                    "PhaseDescription": "Niet van toepassing"
                  },
                  {
                    "TimeStamp": "07-11-2022 12:35:44",
                    "StatusCode": "1",
                    "StatusDescription": "Zending voorgemeld",
                    "PhaseCode": "1",
                    "PhaseDescription": "Collectie"
                  }
                ]
              }
            ]
          }
        }
      },
      "shippingstatusExampleResponseNoShipment": {
        "value": {
          "CompleteStatus": {},
          "Warnings": [
            {
              "Message": "No shipment found",
              "Code": "2"
            }
          ]
        }
      },
      "shippingstatusExampleResponseSignature": {
        "value": {
          "Signature": {
            "Barcode": "3SDEVC317858754",
            "SignatureDate": "2022-11-07T19:28:16",
            "SignatureImage": "iVBORw0KGgoAAAANSUhEUgAAAogAAAGTCAYAAACrs[TRUNCATED]"
          }
        }
      },
      "shippingstatusExampleResponseNoSignature": {
        "value": {
          "Warnings": {
            "Warning": {
              "Message": "No signature found",
              "Code": "2"
            }
          }
        }
      },
      "shippingstatusExampleResponseUpdatedShipments": {
        "value": [
          {
            "Barcode": "3SDEVC2260332157",
            "CreationDate": "2022-11-07T00:00:00",
            "CustomerNumber": "11223344",
            "CustomerCode": "DEVC",
            "Status": {
              "Timestamp": "2022-11-08T02:17:49",
              "StatusCode": "5",
              "StatusDescription": "Zending gesorteerd",
              "PhaseCode": "2",
              "PhaseDescription": "Sortering"
            }
          },
          {
            "Barcode": "3SDEVC775533088",
            "CreationDate": "2022-11-07T00:00:00",
            "CustomerNumber": "11223344",
            "CustomerCode": "DEVC",
            "Status": {
              "Timestamp": "2022-11-08T04:15:00",
              "StatusCode": "13",
              "StatusDescription": "Voorgemeld: nog niet aangenomen",
              "PhaseCode": "1",
              "PhaseDescription": "Collectie"
            }
          },
          {
            "Barcode": "3SDEVC563372025",
            "CreationDate": "2022-11-07T00:00:00",
            "CustomerNumber": "11223344",
            "CustomerCode": "DEVC",
            "Status": {
              "Timestamp": "2022-11-08T04:15:00",
              "StatusCode": "13",
              "StatusDescription": "Voorgemeld: nog niet aangenomen",
              "PhaseCode": "1",
              "PhaseDescription": "Collectie"
            }
          },
          {
            "Barcode": "3SDEVC336510881",
            "CreationDate": "2022-11-08T00:00:00",
            "CustomerNumber": "11223344",
            "CustomerCode": "DEVC",
            "Status": {
              "Timestamp": "2022-11-08T01:01:28",
              "StatusCode": "1",
              "StatusDescription": "Zending voorgemeld",
              "PhaseCode": "1",
              "PhaseDescription": "Collectie"
            }
          }
        ]
      },
      "shippingstatusExampleResponseUpdatedShipmentsNoUpdates": {
        "value": []
      },
      "confirmingExampleRequestDefault": {
        "value": {
          "Customer": {
            "Address": {
              "AddressType": "02",
              "City": "Den Haag",
              "CompanyName": "PostNL",
              "Countrycode": "NL",
              "HouseNr": "3",
              "Street": "Waldorpstraat",
              "Zipcode": "2521CA"
            },
            "CollectionLocation": "123456",
            "ContactPerson": "Janssen",
            "CustomerCode": "DEVC",
            "CustomerNumber": "11223344",
            "Email": "email@company.com",
            "Name": "Janssen"
          },
          "Message": {
            "MessageID": "1",
            "MessageTimeStamp": "08-09-2022 12:00:00"
          },
          "Shipments": [
            {
              "Addresses": [
                {
                  "AddressType": "01",
                  "City": "Utrecht",
                  "Countrycode": "NL",
                  "FirstName": "Peter",
                  "HouseNr": "9",
                  "HouseNrExt": "a bis",
                  "Name": "de Ruiter",
                  "Street": "Bilderdijkstraat",
                  "Zipcode": "3532VA"
                }
              ],
              "Barcode": "3SDEVC748859096",
              "Contacts": [
                {
                  "ContactType": "01",
                  "Email": "receiver@email.com",
                  "SMSNr": "+31612345678",
                  "TelNr": "+31301234567"
                }
              ],
              "Dimension": {
                "Weight": "2000"
              },
              "ProductCodeDelivery": "3085"
            }
          ]
        }
      },
      "confirmingExampleRequestEvening": {
        "value": {
          "Customer": {
            "Address": {
              "AddressType": "02",
              "City": "Den Haag",
              "CompanyName": "PostNL",
              "Countrycode": "NL",
              "HouseNr": "3",
              "Street": "Waldorpstraat",
              "Zipcode": "2521CA"
            },
            "CollectionLocation": "123456",
            "ContactPerson": "Janssen",
            "CustomerCode": "DEVC",
            "CustomerNumber": "11223344",
            "Email": "email@company.com",
            "Name": "Janssen"
          },
          "Message": {
            "MessageID": "1",
            "MessageTimeStamp": "08-09-2022 12:00:00"
          },
          "Shipments": [
            {
              "Addresses": [
                {
                  "AddressType": "01",
                  "City": "Utrecht",
                  "Countrycode": "NL",
                  "FirstName": "Peter",
                  "HouseNr": "9",
                  "HouseNrExt": "a bis",
                  "Name": "de Ruiter",
                  "Street": "Bilderdijkstraat",
                  "Zipcode": "3532VA"
                }
              ],
              "Barcode": "3SDEVC748859096",
              "Contacts": [
                {
                  "ContactType": "01",
                  "Email": "receiver@email.com",
                  "SMSNr": "+31612345678",
                  "TelNr": "+31301234567"
                }
              ],
              "DeliveryDate": "07-09-2022 18:00:00",
              "Dimension": {
                "Weight": "2000"
              },
              "ProductCodeDelivery": "3085",
              "ProductOptions": [
                {
                  "Characteristic": "118",
                  "Option": "006"
                }
              ]
            }
          ]
        }
      },
      "confirmingExampleRequestCustoms": {
        "value": {
          "Customer": {
            "Address": {
              "AddressType": "02",
              "City": "Hoofddorp",
              "CompanyName": "PostNL",
              "Countrycode": "NL",
              "HouseNr": "42",
              "Street": "Siriusdreef",
              "Zipcode": "2132WT"
            },
            "CollectionLocation": "123456",
            "ContactPerson": "Janssen",
            "CustomerCode": "DEVC",
            "CustomerNumber": "11223344",
            "Email": "email@company.com",
            "Name": "Janssen"
          },
          "Message": {
            "MessageID": "1",
            "MessageTimeStamp": "23-03-2022 14:31:21"
          },
          "Shipments": [
            {
              "Addresses": [
                {
                  "AddressType": "01",
                  "City": "Shanghai",
                  "CompanyName": "PostNL",
                  "Countrycode": "CN",
                  "FirstName": "Peter",
                  "HouseNr": "137",
                  "Name": "de Ruiter",
                  "Street": "Nanjinglu",
                  "Zipcode": "310000"
                }
              ],
              "Barcode": "CA12346536XNL",
              "Contacts": [
                {
                  "ContactType": "01",
                  "Email": "receiver@email.com",
                  "SMSNr": "+31612345678"
                }
              ],
              "Customs": [
                {
                  "Content": [
                    {
                      "CountryOfOrigin": "NL",
                      "Description": "Powdered milk",
                      "HSTariffNr": "19019091",
                      "Quantity": 2,
                      "Value": 20,
                      "Weight": 4300
                    }
                  ],
                  "Currency": "EUR",
                  "HandleAsNonDeliverable": false,
                  "Invoice": true,
                  "InvoiceNr": "22334455",
                  "ShipmentType": "Commercial Goods"
                }
              ],
              "Dimension": {
                "Weight": "4300"
              },
              "ProductCodeDelivery": "4945"
            }
          ]
        }
      },
      "labellingExampleRequestDefault": {
        "value": {
          "Customer": {
            "Address": {
              "AddressType": "02",
              "City": "Den Haag",
              "CompanyName": "PostNL",
              "Countrycode": "NL",
              "HouseNr": "3",
              "Street": "Waldorpstraat",
              "Zipcode": "2521CA"
            },
            "CollectionLocation": "123456",
            "ContactPerson": "Janssen",
            "CustomerCode": "DEVC",
            "CustomerNumber": "11223344",
            "Email": "email@company.com",
            "Name": "Janssen"
          },
          "Message": {
            "MessageID": "1",
            "MessageTimeStamp": "08-09-2022 12:00:00",
            "Printertype": "GraphicFile|PDF"
          },
          "Shipments": [
            {
              "Addresses": [
                {
                  "AddressType": "01",
                  "City": "Utrecht",
                  "Countrycode": "NL",
                  "FirstName": "Peter",
                  "HouseNr": "9",
                  "HouseNrExt": "a bis",
                  "Name": "de Ruiter",
                  "Street": "Bilderdijkstraat",
                  "Zipcode": "3532VA"
                }
              ],
              "Barcode": "3SDEVC748859096",
              "Contacts": [
                {
                  "ContactType": "01",
                  "Email": "receiver@email.com",
                  "SMSNr": "+31612345678",
                  "TelNr": "+31301234567"
                }
              ],
              "Dimension": {
                "Weight": "2000"
              },
              "ProductCodeDelivery": "3085"
            }
          ]
        }
      },
      "labellingExampleRequestEvening": {
        "value": {
          "Customer": {
            "Address": {
              "AddressType": "02",
              "City": "Den Haag",
              "CompanyName": "PostNL",
              "Countrycode": "NL",
              "HouseNr": "3",
              "Street": "Waldorpstraat",
              "Zipcode": "2521CA"
            },
            "CollectionLocation": "123456",
            "ContactPerson": "Janssen",
            "CustomerCode": "DEVC",
            "CustomerNumber": "11223344",
            "Email": "email@company.com",
            "Name": "Janssen"
          },
          "Message": {
            "MessageID": "1",
            "MessageTimeStamp": "08-09-2022 12:00:00",
            "Printertype": "GraphicFile|PDF"
          },
          "Shipments": [
            {
              "Addresses": [
                {
                  "AddressType": "01",
                  "City": "Utrecht",
                  "Countrycode": "NL",
                  "FirstName": "Peter",
                  "HouseNr": "9",
                  "HouseNrExt": "a bis",
                  "Name": "de Ruiter",
                  "Street": "Bilderdijkstraat",
                  "Zipcode": "3532VA"
                }
              ],
              "Barcode": "3SDEVC748859096",
              "Contacts": [
                {
                  "ContactType": "01",
                  "Email": "receiver@email.com",
                  "SMSNr": "+31612345678",
                  "TelNr": "+31301234567"
                }
              ],
              "DeliveryDate": "07-09-2022 18:00:00",
              "Dimension": {
                "Weight": "2000"
              },
              "ProductCodeDelivery": "3085",
              "ProductOptions": [
                {
                  "Characteristic": "118",
                  "Option": "006"
                }
              ]
            }
          ]
        }
      },
      "labellingExampleRequestCustoms": {
        "value": {
          "Customer": {
            "Address": {
              "AddressType": "02",
              "City": "Hoofddorp",
              "CompanyName": "PostNL",
              "Countrycode": "NL",
              "HouseNr": "42",
              "Street": "Siriusdreef",
              "Zipcode": "2132WT"
            },
            "CollectionLocation": "123456",
            "ContactPerson": "Janssen",
            "CustomerCode": "DEVC",
            "CustomerNumber": "11223344",
            "Email": "email@company.com",
            "Name": "Janssen"
          },
          "Message": {
            "MessageID": "1",
            "MessageTimeStamp": "23-03-2022 14:31:21",
            "Printertype": "GraphicFile|PDF"
          },
          "Shipments": [
            {
              "Addresses": [
                {
                  "AddressType": "01",
                  "City": "Shanghai",
                  "CompanyName": "PostNL",
                  "Countrycode": "CN",
                  "FirstName": "Peter",
                  "HouseNr": "137",
                  "Name": "de Ruiter",
                  "Street": "Nanjinglu",
                  "Zipcode": "310000"
                }
              ],
              "Barcode": "CA12346536XNL",
              "Contacts": [
                {
                  "ContactType": "01",
                  "Email": "receiver@email.com",
                  "SMSNr": "+31612345678"
                }
              ],
              "Customs": {
                "Content": [
                  {
                    "CountryOfOrigin": "NL",
                    "Description": "Powdered milk",
                    "HSTariffNr": "100878",
                    "Quantity": 2,
                    "Value": 20,
                    "Weight": 4300
                  }
                ],
                "Currency": "EUR",
                "HandleAsNonDeliverable": false,
                "Invoice": true,
                "InvoiceNr": "22334455",
                "ShipmentType": "Commercial Goods"
              },
              "Dimension": {
                "Weight": "4300"
              },
              "ProductCodeDelivery": "4945"
            }
          ]
        }
      },
      "labellingExampleResponseStandard": {
        "value": {
          "MergedLabels": [],
          "ResponseShipments": [
            {
              "Barcode": "3SDEVC272730803",
              "Errors": [],
              "Warnings": [],
              "Labels": [
                {
                  "Content": "JVBERi0xLjMKJeLjz9MKNSAwIG9iago8PAovQ29udGVudHMg[TRUNCATED]",
                  "Labeltype": "Label",
                  "OutputType": "PDF"
                }
              ],
              "ProductCodeDelivery": "3085"
            }
          ]
        }
      },
      "labellingExampleResponseMultilabel": {
        "value": {
          "MergedLabels": [],
          "ResponseShipments": [
            {
              "Barcode": "CA12346536XNL",
              "Errors": [],
              "Warnings": [],
              "Labels": [
                {
                  "Content": "JVBERi0xLjMKJeLjz9MKNSAwIG9iago8PAovQ29udGVudHMg[TRUNCATED]",
                  "Labeltype": "CN23",
                  "OutputType": "PDF"
                },
                {
                  "Content": "JVBERi0xLjMKJeLjz9MKNSAwIG9iago8PAovQ29udGVudHMg[TRUNCATED]",
                  "Labeltype": "CP71",
                  "OutputType": "PDF"
                },
                {
                  "Content": "JVBERi0xLjMKJeLjz9MKNSAwIG9iago8PAovQ29udGVudHMg[TRUNCATED]",
                  "Labeltype": "CommercialInvoice",
                  "OutputType": "PDF"
                }
              ],
              "ProductCodeDelivery": "4945"
            }
          ]
        }
      },
      "labellingExampleResponseMerged": {
        "value": {
          "MergedLabels": [
            {
              "Barcodes": [
                "3SDEVC820454271",
                "3SDEVC299657254"
              ],
              "Labels": [
                {
                  "Content": "JVBERi0xLjMKJeLjz9MKNSAwIG9iago8PAovQ29udGVudHMg[TRUNCATED]",
                  "Labeltype": "Label",
                  "OutputType": "PDF"
                }
              ]
            }
          ],
          "ResponseShipments": [
            {
              "Barcode": "3SDEVC820454271",
              "Errors": [],
              "Warnings": [],
              "Labels": [],
              "ProductCodeDelivery": "3085"
            },
            {
              "Barcode": "3SDEVC299657254",
              "Errors": [],
              "Warnings": [],
              "Labels": [],
              "ProductCodeDelivery": "3085"
            }
          ]
        }
      },
      "checkoutExampleFull": {
        "value": {
          "OrderDate": "24-02-2021 12:00:00",
          "ShippingDuration": "1",
          "CutOffTimes": [
            {
              "Day": "00",
              "Available": "true",
              "Type": "Regular",
              "Time": "20:00:00"
            },
            {
              "Day": "00",
              "Available": "true",
              "Type": "Today",
              "Time": "12:00:00"
            }
          ],
          "HolidaySorting": "true",
          "Options": [
            "Daytime",
            "Evening",
            "Pickup"
          ],
          "Locations": "2",
          "Days": "3",
          "Addresses": [
            {
              "AddressType": "01",
              "Street": "Molengraaffplantsoen",
              "HouseNr": "74",
              "Zipcode": "3571ZZ",
              "City": "Utrecht",
              "Countrycode": "NL"
            }
          ]
        }
      },
      "checkoutExampleDelivery": {
        "value": {
          "OrderDate": "24-02-2021 12:00:00",
          "ShippingDuration": "1",
          "CutOffTimes": [
            {
              "Day": "00",
              "Available": "true",
              "Type": "Regular",
              "Time": "20:00:00"
            },
            {
              "Day": "00",
              "Available": "true",
              "Type": "Today",
              "Time": "12:00:00"
            }
          ],
          "HolidaySorting": "true",
          "Options": [
            "Daytime",
            "Evening"
          ],
          "Locations": "2",
          "Days": "3",
          "Addresses": [
            {
              "AddressType": "01",
              "Street": "Molengraaffplantsoen",
              "HouseNr": "74",
              "Zipcode": "3571ZZ",
              "City": "Utrecht",
              "Countrycode": "NL"
            }
          ]
        }
      },
      "checkoutExamplePickup": {
        "value": {
          "OrderDate": "24-02-2021 12:00:00",
          "ShippingDuration": "1",
          "CutOffTimes": [
            {
              "Day": "00",
              "Available": "true",
              "Type": "Regular",
              "Time": "20:00:00"
            }
          ],
          "HolidaySorting": "true",
          "Options": [
            "Pickup"
          ],
          "Locations": "2",
          "Days": "3",
          "Addresses": [
            {
              "AddressType": "01",
              "Street": "Molengraaffplantsoen",
              "HouseNr": "74",
              "Zipcode": "3571ZZ",
              "City": "Utrecht",
              "Countrycode": "NL"
            }
          ]
        }
      },
      "cpcSuccessSingleAddress": {
        "value": [
          {
            "city": "UTRECHT",
            "postalCode": "3571ZZ",
            "streetName": "Molengraaffplantsoen",
            "houseNumber": 74,
            "houseNumberAddition": "bis",
            "formattedAddress": [
              "Molengraaffplantsoen 74 bis",
              "3571ZZ UTRECHT"
            ]
          }
        ]
      },
      "cpcSuccessMultipleAddresses": {
        "value": [
          {
            "city": "UTRECHT",
            "postalCode": "3532VA",
            "streetName": "Bilderdijkstraat",
            "houseNumber": 9,
            "formattedAddress": [
              "Bilderdijkstraat 9",
              "3532VA UTRECHT"
            ]
          },
          {
            "city": "UTRECHT",
            "postalCode": "3532VA",
            "streetName": "Bilderdijkstraat",
            "houseNumber": 9,
            "houseNumberAddition": "A",
            "formattedAddress": [
              "Bilderdijkstraat 9 A",
              "3532VA UTRECHT"
            ]
          },
          {
            "city": "UTRECHT",
            "postalCode": "3532VA",
            "streetName": "Bilderdijkstraat",
            "houseNumber": 9,
            "houseNumberAddition": "ABS",
            "formattedAddress": [
              "Bilderdijkstraat 9 ABS",
              "3532VA UTRECHT"
            ]
          }
        ]
      },
      "cpcSuccessNoAddress": {
        "value": []
      }
    }
  }
}
